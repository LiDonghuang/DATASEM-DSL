grammar ausim.xtext.kanban.domainmodel.Kanbanmodel with org.eclipse.xtext.common.Terminals

generate kanbanmodel "http://www.xtext.ausim/kanban/domainmodel/Kanbanmodel"

	KanbanSchedulingSystem:
		'KSSModel' name=ID
		'TaskPatterns'
		(KSSTaskPatterns += TaskPattern)+
		(KSStaskPatternTypes += TaskType)+
		'end TaskPatterns'
		'OrganizationModel'
		(SoSServices += Service)+
		(orgUnits += Team)+
		'end OrganizationModel'
		'WorkFlowModel'
		(kssTasks += Task)+
		(kssWorkFlow=KanbanTaskModel)
		'end WorkFlowModel'
		'GovernanceModel'
		(kssGovModel=KanbanGovModel)?
		'end GovernanceModel'
		'end KSSModel'
	;
	
	
	TaskPattern:
		'workflowTemplate' name=ID '{'
		('Description' description=STRING)?
		('Types' '{' (taskpatternTypes+=[TaskType])+ '}')?
		'}'
	;
	TaskType :
	'taskType' name=ID '{'
	('Description' description=STRING)?
	'}'
	;	
	
	
	Service:
		'service' name=ID ('{'
		('Description' description=STRING)?
		'}')?
	;	
	
	
	Task:
		'workItem' name=ID '{'
		('Description' description=STRING)?
		('Pattern' pattern+=[TaskPattern])?		
		('Type' patternType+=[TaskType])?
		('subtasks' '{' (sTasks+=[Task])+ '}')?
		('taskDependencies'(taskDependencies += Dependency)*)?
		('servicesRequired' (reqSpecialties+=[Service])+)?
		('base efforts' befforts=INT)?
		('base value' bvalue=INT)?
		('classOfService' COS=ID)?
		'}'
	;
	Dependency:
		sourceTask=[Task] ('=>'| '->') targetTask=[Task] 
	;
	
	
	Team:
		('team'|'group') name=ID '{'
		('Description' description=STRING)?
		('sourceUnits' '{' (demandUnits+=[Team])+ '}')?
		('targetUnits' '{' (sourcedUnits+=[Team])+ '}')?
		('contains' '{' (groupmembers+=[Team])+ '}')?
		('resources' '{' (resources+=Asset)+ '}')?
		('services' '{' (services+=[Service])+ '}')?
		'}'
	;
	Asset: 
		'resource' name=ID '{'
		('Description' description=STRING)?
		'skills' '{' (hasSkills+=Skill)+ '}'
		'}'
	;	
	Skill:
		name=ID ('{'
		('Description' description=STRING)?
		'}')?
	;
	
	
		
		
	Requirement:
		'requirement' name=ID '{' 
		 ('Description' description=STRING)?
		 ('workItems' '{' (rTasks+=[Task])+ '}') 
		 ('workItemNetwork' (dependencies += Dependency)*)?
		'}'
	;
	
	

	
	
	KanbanTaskModel:
		'WorkFlow' name=ID
		(caps+=Capability)+
		'end WorkFlow'
	;
	
	Capability:
		'capability' name=ID '{'
		('Description' description=STRING)?
		(reqs+=Requirement)+ 	
		'}'
	;
	
	KanbanGovModel:

		(strategy+=Strategy)
	;
	
	
	Strategy:
		'strategy' name=ID '{'
			(entities+=Entity)*
		'}'
	;
	
	Entity:
		'entity' name=ID '{'
		('ServiceDirectory' sdname=ID '=' '['(serviceProvisions+=Provision)* ']')?
		(entityBehavior=Statemachine)
		'}'
	;
	
	Provision:
		'(' serviceName=[Service] ',' '{'(providers+=[Team])* '}'')' 
	;
	
	
	Statemachine :
     {Statemachine}
	('events' 
		events+=Event+ 
	'end')?
	('activities' 
		commands+=Command+ 
	'end')?
	(states+=State)*
;

Event:
	name=ID code=ID
;

Command:
	name=ID code=ID
;

State:
	'state' name=ID
		('actions' '{' actions+=[Command]+ '}')?
		(transitions+=Transition)*
	'end'
;

Transition:
	(event=[Event] '=>' state=[State]) | (event=[Event] '/' '[' (eventactions+=[Command])+ ']' '=>' state=[State])
;
	