/*
* generated by Xtext
*/
grammar InternalKanbanmodel;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package ausim.xtext.kanban.domainmodel.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package ausim.xtext.kanban.domainmodel.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import ausim.xtext.kanban.domainmodel.services.KanbanmodelGrammarAccess;

}

@parser::members {

 	private KanbanmodelGrammarAccess grammarAccess;
 	
    public InternalKanbanmodelParser(TokenStream input, KanbanmodelGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "KanbanSchedulingSystem";	
   	}
   	
   	@Override
   	protected KanbanmodelGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleKanbanSchedulingSystem
entryRuleKanbanSchedulingSystem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKanbanSchedulingSystemRule()); }
	 iv_ruleKanbanSchedulingSystem=ruleKanbanSchedulingSystem 
	 { $current=$iv_ruleKanbanSchedulingSystem.current; } 
	 EOF 
;

// Rule KanbanSchedulingSystem
ruleKanbanSchedulingSystem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='KSSWorkFlowModel' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getKanbanSchedulingSystemAccess().getKSSWorkFlowModelKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getKanbanSchedulingSystemAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getKanbanSchedulingSystemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='Organization' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getKanbanSchedulingSystemAccess().getOrganizationKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getKanbanSchedulingSystemAccess().getOrgUnitsTeamParserRuleCall_3_0()); 
	    }
		lv_orgUnits_3_0=ruleTeam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKanbanSchedulingSystemRule());
	        }
       		add(
       			$current, 
       			"orgUnits",
        		lv_orgUnits_3_0, 
        		"Team");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_4='end Organization' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getKanbanSchedulingSystemAccess().getEndOrganizationKeyword_4());
    }
	otherlv_5='WorkItems' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getKanbanSchedulingSystemAccess().getWorkItemsKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getKanbanSchedulingSystemAccess().getKssTasksTaskParserRuleCall_6_0()); 
	    }
		lv_kssTasks_6_0=ruleTask		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKanbanSchedulingSystemRule());
	        }
       		add(
       			$current, 
       			"kssTasks",
        		lv_kssTasks_6_0, 
        		"Task");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_7='end WorkItems' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getKanbanSchedulingSystemAccess().getEndWorkItemsKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getKanbanSchedulingSystemAccess().getKssWorkFlowKanbanTaskModelParserRuleCall_8_0()); 
	    }
		lv_kssWorkFlow_8_0=ruleKanbanTaskModel		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKanbanSchedulingSystemRule());
	        }
       		set(
       			$current, 
       			"kssWorkFlow",
        		lv_kssWorkFlow_8_0, 
        		"KanbanTaskModel");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9='end KSSWorkFlowModel' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getKanbanSchedulingSystemAccess().getEndKSSWorkFlowModelKeyword_9());
    }
)
;





// Entry rule entryRuleTeam
entryRuleTeam returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTeamRule()); }
	 iv_ruleTeam=ruleTeam 
	 { $current=$iv_ruleTeam.current; } 
	 EOF 
;

// Rule Team
ruleTeam returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='team' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTeamAccess().getTeamKeyword_0_0());
    }

    |	otherlv_1='group' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTeamAccess().getGroupKeyword_0_1());
    }
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getTeamAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTeamRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTeamAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_4='sourceUnits' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTeamAccess().getSourceUnitsKeyword_3_0());
    }
	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTeamAccess().getLeftCurlyBracketKeyword_3_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTeamRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getTeamAccess().getDemandUnitsTeamCrossReference_3_2_0()); 
	}

)
)+	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTeamAccess().getRightCurlyBracketKeyword_3_3());
    }
)?(	otherlv_8='targetUnits' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getTeamAccess().getTargetUnitsKeyword_4_0());
    }
	otherlv_9='{' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getTeamAccess().getLeftCurlyBracketKeyword_4_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTeamRule());
	        }
        }
	otherlv_10=RULE_ID
	{
		newLeafNode(otherlv_10, grammarAccess.getTeamAccess().getSourcedUnitsTeamCrossReference_4_2_0()); 
	}

)
)+	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getTeamAccess().getRightCurlyBracketKeyword_4_3());
    }
)?(	otherlv_12='contains' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getTeamAccess().getContainsKeyword_5_0());
    }
	otherlv_13='{' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getTeamAccess().getLeftCurlyBracketKeyword_5_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTeamRule());
	        }
        }
	otherlv_14=RULE_ID
	{
		newLeafNode(otherlv_14, grammarAccess.getTeamAccess().getGroupmembersTeamCrossReference_5_2_0()); 
	}

)
)+	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getTeamAccess().getRightCurlyBracketKeyword_5_3());
    }
)?(	otherlv_16='resources' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getTeamAccess().getResourcesKeyword_6_0());
    }
	otherlv_17='{' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getTeamAccess().getLeftCurlyBracketKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTeamAccess().getResourcesAssetParserRuleCall_6_2_0()); 
	    }
		lv_resources_18_0=ruleAsset		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTeamRule());
	        }
       		add(
       			$current, 
       			"resources",
        		lv_resources_18_0, 
        		"Asset");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_19='}' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getTeamAccess().getRightCurlyBracketKeyword_6_3());
    }
)?(	otherlv_20='services' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getTeamAccess().getServicesKeyword_7_0());
    }
	otherlv_21='{' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getTeamAccess().getLeftCurlyBracketKeyword_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTeamAccess().getServicesServiceParserRuleCall_7_2_0()); 
	    }
		lv_services_22_0=ruleService		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTeamRule());
	        }
       		add(
       			$current, 
       			"services",
        		lv_services_22_0, 
        		"Service");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_23='}' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getTeamAccess().getRightCurlyBracketKeyword_7_3());
    }
)?	otherlv_24='}' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getTeamAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleService
entryRuleService returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getServiceRule()); }
	 iv_ruleService=ruleService 
	 { $current=$iv_ruleService.current; } 
	 EOF 
;

// Rule Service
ruleService returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='service' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getServiceAccess().getServiceKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getServiceAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getServiceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleAsset
entryRuleAsset returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssetRule()); }
	 iv_ruleAsset=ruleAsset 
	 { $current=$iv_ruleAsset.current; } 
	 EOF 
;

// Rule Asset
ruleAsset returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='resource' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAssetAccess().getResourceKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getAssetAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssetRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAssetAccess().getLeftCurlyBracketKeyword_2_0());
    }
	otherlv_3='skills' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAssetAccess().getSkillsKeyword_2_1());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAssetAccess().getLeftCurlyBracketKeyword_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAssetAccess().getHasSkillsSkillParserRuleCall_2_3_0()); 
	    }
		lv_hasSkills_5_0=ruleSkill		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssetRule());
	        }
       		add(
       			$current, 
       			"hasSkills",
        		lv_hasSkills_5_0, 
        		"Skill");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAssetAccess().getRightCurlyBracketKeyword_2_4());
    }
	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getAssetAccess().getRightCurlyBracketKeyword_2_5());
    }
)?)
;





// Entry rule entryRuleSkill
entryRuleSkill returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSkillRule()); }
	 iv_ruleSkill=ruleSkill 
	 { $current=$iv_ruleSkill.current; } 
	 EOF 
;

// Rule Skill
ruleSkill returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getSkillAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSkillRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleDependency
entryRuleDependency returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDependencyRule()); }
	 iv_ruleDependency=ruleDependency 
	 { $current=$iv_ruleDependency.current; } 
	 EOF 
;

// Rule Dependency
ruleDependency returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDependencyRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getDependencyAccess().getSourceTaskTaskCrossReference_0_0()); 
	}

)
)(	otherlv_1='=>' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDependencyAccess().getEqualsSignGreaterThanSignKeyword_1_0());
    }

    |	otherlv_2='->' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDependencyAccess().getHyphenMinusGreaterThanSignKeyword_1_1());
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDependencyRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getDependencyAccess().getTargetTaskTaskCrossReference_2_0()); 
	}

)
))
;





// Entry rule entryRuleRequirement
entryRuleRequirement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRequirementRule()); }
	 iv_ruleRequirement=ruleRequirement 
	 { $current=$iv_ruleRequirement.current; } 
	 EOF 
;

// Rule Requirement
ruleRequirement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='requirement' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRequirementAccess().getRequirementKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRequirementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRequirementAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='workItems' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRequirementAccess().getWorkItemsKeyword_3_0());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRequirementAccess().getLeftCurlyBracketKeyword_3_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getRequirementAccess().getRTasksTaskCrossReference_3_2_0()); 
	}

)
)+	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRequirementAccess().getRightCurlyBracketKeyword_3_3());
    }
)(	otherlv_7='workItemNetwork' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRequirementAccess().getWorkItemNetworkKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getDependenciesDependencyParserRuleCall_4_1_0()); 
	    }
		lv_dependencies_8_0=ruleDependency		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		add(
       			$current, 
       			"dependencies",
        		lv_dependencies_8_0, 
        		"Dependency");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getRequirementAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleTask
entryRuleTask returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTaskRule()); }
	 iv_ruleTask=ruleTask 
	 { $current=$iv_ruleTask.current; } 
	 EOF 
;

// Rule Task
ruleTask returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='workItem' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTaskAccess().getWorkItemKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTaskAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTaskRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTaskAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='subtasks' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTaskAccess().getSubtasksKeyword_3_0());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTaskAccess().getLeftCurlyBracketKeyword_3_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTaskRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getTaskAccess().getSTasksTaskCrossReference_3_2_0()); 
	}

)
)+	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTaskAccess().getRightCurlyBracketKeyword_3_3());
    }
)?(	otherlv_7='taskDependencies' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTaskAccess().getTaskDependenciesKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTaskAccess().getTaskDependenciesDependencyParserRuleCall_4_1_0()); 
	    }
		lv_taskDependencies_8_0=ruleDependency		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTaskRule());
	        }
       		add(
       			$current, 
       			"taskDependencies",
        		lv_taskDependencies_8_0, 
        		"Dependency");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(	otherlv_9='servicesRequired' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getTaskAccess().getServicesRequiredKeyword_5_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTaskRule());
	        }
        }
	otherlv_10=RULE_ID
	{
		newLeafNode(otherlv_10, grammarAccess.getTaskAccess().getReqSpecialtiesServiceCrossReference_5_1_0()); 
	}

)
)+)?(	otherlv_11='base value' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getTaskAccess().getBaseValueKeyword_6_0());
    }
(
(
		lv_bvalue_12_0=RULE_INT
		{
			newLeafNode(lv_bvalue_12_0, grammarAccess.getTaskAccess().getBvalueINTTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTaskRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"bvalue",
        		lv_bvalue_12_0, 
        		"INT");
	    }

)
))?(	otherlv_13='classOfService' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getTaskAccess().getClassOfServiceKeyword_7_0());
    }
(
(
		lv_COS_14_0=RULE_ID
		{
			newLeafNode(lv_COS_14_0, grammarAccess.getTaskAccess().getCOSIDTerminalRuleCall_7_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTaskRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"COS",
        		lv_COS_14_0, 
        		"ID");
	    }

)
))?	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getTaskAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleKanbanTaskModel
entryRuleKanbanTaskModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKanbanTaskModelRule()); }
	 iv_ruleKanbanTaskModel=ruleKanbanTaskModel 
	 { $current=$iv_ruleKanbanTaskModel.current; } 
	 EOF 
;

// Rule KanbanTaskModel
ruleKanbanTaskModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='TaskModel' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getKanbanTaskModelAccess().getTaskModelKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getKanbanTaskModelAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getKanbanTaskModelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getKanbanTaskModelAccess().getCapsCapabilityParserRuleCall_2_0()); 
	    }
		lv_caps_2_0=ruleCapability		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKanbanTaskModelRule());
	        }
       		add(
       			$current, 
       			"caps",
        		lv_caps_2_0, 
        		"Capability");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='end TaskModel' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getKanbanTaskModelAccess().getEndTaskModelKeyword_3());
    }
)
;





// Entry rule entryRuleCapability
entryRuleCapability returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCapabilityRule()); }
	 iv_ruleCapability=ruleCapability 
	 { $current=$iv_ruleCapability.current; } 
	 EOF 
;

// Rule Capability
ruleCapability returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='capability' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCapabilityAccess().getCapabilityKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getCapabilityAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCapabilityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCapabilityAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCapabilityAccess().getReqsRequirementParserRuleCall_3_0()); 
	    }
		lv_reqs_3_0=ruleRequirement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCapabilityRule());
	        }
       		add(
       			$current, 
       			"reqs",
        		lv_reqs_3_0, 
        		"Requirement");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCapabilityAccess().getRightCurlyBracketKeyword_4());
    }
)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


