/*
* generated by Xtext
*/
grammar InternalKanbanmodel;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package ausim.xtext.kanban.domainmodel.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package ausim.xtext.kanban.domainmodel.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import ausim.xtext.kanban.domainmodel.services.KanbanmodelGrammarAccess;

}

@parser::members {

 	private KanbanmodelGrammarAccess grammarAccess;
 	
    public InternalKanbanmodelParser(TokenStream input, KanbanmodelGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "KanbanSchedulingSystem";	
   	}
   	
   	@Override
   	protected KanbanmodelGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleKanbanSchedulingSystem
entryRuleKanbanSchedulingSystem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKanbanSchedulingSystemRule()); }
	 iv_ruleKanbanSchedulingSystem=ruleKanbanSchedulingSystem 
	 { $current=$iv_ruleKanbanSchedulingSystem.current; } 
	 EOF 
;

// Rule KanbanSchedulingSystem
ruleKanbanSchedulingSystem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='KSSModel' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getKanbanSchedulingSystemAccess().getKSSModelKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getKanbanSchedulingSystemAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getKanbanSchedulingSystemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='TaskPatterns' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getKanbanSchedulingSystemAccess().getTaskPatternsKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getKanbanSchedulingSystemAccess().getKSSTaskPatternsTaskPatternParserRuleCall_3_0()); 
	    }
		lv_KSSTaskPatterns_3_0=ruleTaskPattern		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKanbanSchedulingSystemRule());
	        }
       		add(
       			$current, 
       			"KSSTaskPatterns",
        		lv_KSSTaskPatterns_3_0, 
        		"TaskPattern");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getKanbanSchedulingSystemAccess().getKSStaskPatternTypesTaskTypeParserRuleCall_4_0()); 
	    }
		lv_KSStaskPatternTypes_4_0=ruleTaskType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKanbanSchedulingSystemRule());
	        }
       		add(
       			$current, 
       			"KSStaskPatternTypes",
        		lv_KSStaskPatternTypes_4_0, 
        		"TaskType");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_5='end TaskPatterns' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getKanbanSchedulingSystemAccess().getEndTaskPatternsKeyword_5());
    }
	otherlv_6='OrganizationModel' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getKanbanSchedulingSystemAccess().getOrganizationModelKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getKanbanSchedulingSystemAccess().getSoSServicesServiceParserRuleCall_7_0()); 
	    }
		lv_SoSServices_7_0=ruleService		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKanbanSchedulingSystemRule());
	        }
       		add(
       			$current, 
       			"SoSServices",
        		lv_SoSServices_7_0, 
        		"Service");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getKanbanSchedulingSystemAccess().getOrgUnitsTeamParserRuleCall_8_0()); 
	    }
		lv_orgUnits_8_0=ruleTeam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKanbanSchedulingSystemRule());
	        }
       		add(
       			$current, 
       			"orgUnits",
        		lv_orgUnits_8_0, 
        		"Team");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_9='end OrganizationModel' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getKanbanSchedulingSystemAccess().getEndOrganizationModelKeyword_9());
    }
	otherlv_10='WorkFlowModel' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getKanbanSchedulingSystemAccess().getWorkFlowModelKeyword_10());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getKanbanSchedulingSystemAccess().getKssTasksTaskParserRuleCall_11_0()); 
	    }
		lv_kssTasks_11_0=ruleTask		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKanbanSchedulingSystemRule());
	        }
       		add(
       			$current, 
       			"kssTasks",
        		lv_kssTasks_11_0, 
        		"Task");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getKanbanSchedulingSystemAccess().getKssWorkFlowKanbanTaskModelParserRuleCall_12_0()); 
	    }
		lv_kssWorkFlow_12_0=ruleKanbanTaskModel		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKanbanSchedulingSystemRule());
	        }
       		set(
       			$current, 
       			"kssWorkFlow",
        		lv_kssWorkFlow_12_0, 
        		"KanbanTaskModel");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13='end WorkFlowModel' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getKanbanSchedulingSystemAccess().getEndWorkFlowModelKeyword_13());
    }
	otherlv_14='GovernanceModel' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getKanbanSchedulingSystemAccess().getGovernanceModelKeyword_14());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getKanbanSchedulingSystemAccess().getKssGovModelKanbanGovModelParserRuleCall_15_0()); 
	    }
		lv_kssGovModel_15_0=ruleKanbanGovModel		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKanbanSchedulingSystemRule());
	        }
       		set(
       			$current, 
       			"kssGovModel",
        		lv_kssGovModel_15_0, 
        		"KanbanGovModel");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_16='end GovernanceModel' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getKanbanSchedulingSystemAccess().getEndGovernanceModelKeyword_16());
    }
	otherlv_17='end KSSModel' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getKanbanSchedulingSystemAccess().getEndKSSModelKeyword_17());
    }
)
;





// Entry rule entryRuleTaskPattern
entryRuleTaskPattern returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTaskPatternRule()); }
	 iv_ruleTaskPattern=ruleTaskPattern 
	 { $current=$iv_ruleTaskPattern.current; } 
	 EOF 
;

// Rule TaskPattern
ruleTaskPattern returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='workflowTemplate' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTaskPatternAccess().getWorkflowTemplateKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTaskPatternAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTaskPatternRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTaskPatternAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='Description' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTaskPatternAccess().getDescriptionKeyword_3_0());
    }
(
(
		lv_description_4_0=RULE_STRING
		{
			newLeafNode(lv_description_4_0, grammarAccess.getTaskPatternAccess().getDescriptionSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTaskPatternRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_4_0, 
        		"STRING");
	    }

)
))?(	otherlv_5='Types' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTaskPatternAccess().getTypesKeyword_4_0());
    }
	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTaskPatternAccess().getLeftCurlyBracketKeyword_4_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTaskPatternRule());
	        }
        }
	otherlv_7=RULE_ID
	{
		newLeafNode(otherlv_7, grammarAccess.getTaskPatternAccess().getTaskpatternTypesTaskTypeCrossReference_4_2_0()); 
	}

)
)+	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getTaskPatternAccess().getRightCurlyBracketKeyword_4_3());
    }
)?	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getTaskPatternAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleTaskType
entryRuleTaskType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTaskTypeRule()); }
	 iv_ruleTaskType=ruleTaskType 
	 { $current=$iv_ruleTaskType.current; } 
	 EOF 
;

// Rule TaskType
ruleTaskType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='taskType' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTaskTypeAccess().getTaskTypeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTaskTypeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTaskTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTaskTypeAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='Description' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTaskTypeAccess().getDescriptionKeyword_3_0());
    }
(
(
		lv_description_4_0=RULE_STRING
		{
			newLeafNode(lv_description_4_0, grammarAccess.getTaskTypeAccess().getDescriptionSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTaskTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_4_0, 
        		"STRING");
	    }

)
))?	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTaskTypeAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleService
entryRuleService returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getServiceRule()); }
	 iv_ruleService=ruleService 
	 { $current=$iv_ruleService.current; } 
	 EOF 
;

// Rule Service
ruleService returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='service' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getServiceAccess().getServiceKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getServiceAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getServiceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getServiceAccess().getLeftCurlyBracketKeyword_2_0());
    }
(	otherlv_3='Description' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getServiceAccess().getDescriptionKeyword_2_1_0());
    }
(
(
		lv_description_4_0=RULE_STRING
		{
			newLeafNode(lv_description_4_0, grammarAccess.getServiceAccess().getDescriptionSTRINGTerminalRuleCall_2_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getServiceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_4_0, 
        		"STRING");
	    }

)
))?	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getServiceAccess().getRightCurlyBracketKeyword_2_2());
    }
)?)
;





// Entry rule entryRuleTask
entryRuleTask returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTaskRule()); }
	 iv_ruleTask=ruleTask 
	 { $current=$iv_ruleTask.current; } 
	 EOF 
;

// Rule Task
ruleTask returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='workItem' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTaskAccess().getWorkItemKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTaskAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTaskRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTaskAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='Description' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTaskAccess().getDescriptionKeyword_3_0());
    }
(
(
		lv_description_4_0=RULE_STRING
		{
			newLeafNode(lv_description_4_0, grammarAccess.getTaskAccess().getDescriptionSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTaskRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_4_0, 
        		"STRING");
	    }

)
))?(	otherlv_5='Pattern' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTaskAccess().getPatternKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTaskRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getTaskAccess().getPatternTaskPatternCrossReference_4_1_0()); 
	}

)
))?(	otherlv_7='Type' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTaskAccess().getTypeKeyword_5_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTaskRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getTaskAccess().getPatternTypeTaskTypeCrossReference_5_1_0()); 
	}

)
))?(	otherlv_9='subtasks' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getTaskAccess().getSubtasksKeyword_6_0());
    }
	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getTaskAccess().getLeftCurlyBracketKeyword_6_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTaskRule());
	        }
        }
	otherlv_11=RULE_ID
	{
		newLeafNode(otherlv_11, grammarAccess.getTaskAccess().getSTasksTaskCrossReference_6_2_0()); 
	}

)
)+	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getTaskAccess().getRightCurlyBracketKeyword_6_3());
    }
)?(	otherlv_13='taskDependencies' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getTaskAccess().getTaskDependenciesKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTaskAccess().getTaskDependenciesDependencyParserRuleCall_7_1_0()); 
	    }
		lv_taskDependencies_14_0=ruleDependency		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTaskRule());
	        }
       		add(
       			$current, 
       			"taskDependencies",
        		lv_taskDependencies_14_0, 
        		"Dependency");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(	otherlv_15='servicesRequired' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getTaskAccess().getServicesRequiredKeyword_8_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTaskRule());
	        }
        }
	otherlv_16=RULE_ID
	{
		newLeafNode(otherlv_16, grammarAccess.getTaskAccess().getReqSpecialtiesServiceCrossReference_8_1_0()); 
	}

)
)+)?(	otherlv_17='base efforts' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getTaskAccess().getBaseEffortsKeyword_9_0());
    }
(
(
		lv_befforts_18_0=RULE_INT
		{
			newLeafNode(lv_befforts_18_0, grammarAccess.getTaskAccess().getBeffortsINTTerminalRuleCall_9_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTaskRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"befforts",
        		lv_befforts_18_0, 
        		"INT");
	    }

)
))?(	otherlv_19='base value' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getTaskAccess().getBaseValueKeyword_10_0());
    }
(
(
		lv_bvalue_20_0=RULE_INT
		{
			newLeafNode(lv_bvalue_20_0, grammarAccess.getTaskAccess().getBvalueINTTerminalRuleCall_10_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTaskRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"bvalue",
        		lv_bvalue_20_0, 
        		"INT");
	    }

)
))?(	otherlv_21='classOfService' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getTaskAccess().getClassOfServiceKeyword_11_0());
    }
(
(
		lv_COS_22_0=RULE_ID
		{
			newLeafNode(lv_COS_22_0, grammarAccess.getTaskAccess().getCOSIDTerminalRuleCall_11_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTaskRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"COS",
        		lv_COS_22_0, 
        		"ID");
	    }

)
))?	otherlv_23='}' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getTaskAccess().getRightCurlyBracketKeyword_12());
    }
)
;





// Entry rule entryRuleDependency
entryRuleDependency returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDependencyRule()); }
	 iv_ruleDependency=ruleDependency 
	 { $current=$iv_ruleDependency.current; } 
	 EOF 
;

// Rule Dependency
ruleDependency returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDependencyRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getDependencyAccess().getSourceTaskTaskCrossReference_0_0()); 
	}

)
)(	otherlv_1='=>' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDependencyAccess().getEqualsSignGreaterThanSignKeyword_1_0());
    }

    |	otherlv_2='->' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDependencyAccess().getHyphenMinusGreaterThanSignKeyword_1_1());
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDependencyRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getDependencyAccess().getTargetTaskTaskCrossReference_2_0()); 
	}

)
))
;





// Entry rule entryRuleTeam
entryRuleTeam returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTeamRule()); }
	 iv_ruleTeam=ruleTeam 
	 { $current=$iv_ruleTeam.current; } 
	 EOF 
;

// Rule Team
ruleTeam returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='team' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTeamAccess().getTeamKeyword_0_0());
    }

    |	otherlv_1='group' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTeamAccess().getGroupKeyword_0_1());
    }
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getTeamAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTeamRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTeamAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_4='Description' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTeamAccess().getDescriptionKeyword_3_0());
    }
(
(
		lv_description_5_0=RULE_STRING
		{
			newLeafNode(lv_description_5_0, grammarAccess.getTeamAccess().getDescriptionSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTeamRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_5_0, 
        		"STRING");
	    }

)
))?(	otherlv_6='sourceUnits' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTeamAccess().getSourceUnitsKeyword_4_0());
    }
	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTeamAccess().getLeftCurlyBracketKeyword_4_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTeamRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getTeamAccess().getDemandUnitsTeamCrossReference_4_2_0()); 
	}

)
)+	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getTeamAccess().getRightCurlyBracketKeyword_4_3());
    }
)?(	otherlv_10='targetUnits' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getTeamAccess().getTargetUnitsKeyword_5_0());
    }
	otherlv_11='{' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getTeamAccess().getLeftCurlyBracketKeyword_5_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTeamRule());
	        }
        }
	otherlv_12=RULE_ID
	{
		newLeafNode(otherlv_12, grammarAccess.getTeamAccess().getSourcedUnitsTeamCrossReference_5_2_0()); 
	}

)
)+	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getTeamAccess().getRightCurlyBracketKeyword_5_3());
    }
)?(	otherlv_14='contains' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getTeamAccess().getContainsKeyword_6_0());
    }
	otherlv_15='{' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getTeamAccess().getLeftCurlyBracketKeyword_6_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTeamRule());
	        }
        }
	otherlv_16=RULE_ID
	{
		newLeafNode(otherlv_16, grammarAccess.getTeamAccess().getGroupmembersTeamCrossReference_6_2_0()); 
	}

)
)+	otherlv_17='}' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getTeamAccess().getRightCurlyBracketKeyword_6_3());
    }
)?(	otherlv_18='resources' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getTeamAccess().getResourcesKeyword_7_0());
    }
	otherlv_19='{' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getTeamAccess().getLeftCurlyBracketKeyword_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTeamAccess().getResourcesAssetParserRuleCall_7_2_0()); 
	    }
		lv_resources_20_0=ruleAsset		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTeamRule());
	        }
       		add(
       			$current, 
       			"resources",
        		lv_resources_20_0, 
        		"Asset");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_21='}' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getTeamAccess().getRightCurlyBracketKeyword_7_3());
    }
)?(	otherlv_22='services' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getTeamAccess().getServicesKeyword_8_0());
    }
	otherlv_23='{' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getTeamAccess().getLeftCurlyBracketKeyword_8_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTeamRule());
	        }
        }
	otherlv_24=RULE_ID
	{
		newLeafNode(otherlv_24, grammarAccess.getTeamAccess().getServicesServiceCrossReference_8_2_0()); 
	}

)
)+	otherlv_25='}' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getTeamAccess().getRightCurlyBracketKeyword_8_3());
    }
)?	otherlv_26='}' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getTeamAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleAsset
entryRuleAsset returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssetRule()); }
	 iv_ruleAsset=ruleAsset 
	 { $current=$iv_ruleAsset.current; } 
	 EOF 
;

// Rule Asset
ruleAsset returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='resource' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAssetAccess().getResourceKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getAssetAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssetRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAssetAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='Description' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAssetAccess().getDescriptionKeyword_3_0());
    }
(
(
		lv_description_4_0=RULE_STRING
		{
			newLeafNode(lv_description_4_0, grammarAccess.getAssetAccess().getDescriptionSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssetRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_4_0, 
        		"STRING");
	    }

)
))?	otherlv_5='skills' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAssetAccess().getSkillsKeyword_4());
    }
	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAssetAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAssetAccess().getHasSkillsSkillParserRuleCall_6_0()); 
	    }
		lv_hasSkills_7_0=ruleSkill		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssetRule());
	        }
       		add(
       			$current, 
       			"hasSkills",
        		lv_hasSkills_7_0, 
        		"Skill");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getAssetAccess().getRightCurlyBracketKeyword_7());
    }
	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getAssetAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleSkill
entryRuleSkill returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSkillRule()); }
	 iv_ruleSkill=ruleSkill 
	 { $current=$iv_ruleSkill.current; } 
	 EOF 
;

// Rule Skill
ruleSkill returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getSkillAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSkillRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)(	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSkillAccess().getLeftCurlyBracketKeyword_1_0());
    }
(	otherlv_2='Description' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSkillAccess().getDescriptionKeyword_1_1_0());
    }
(
(
		lv_description_3_0=RULE_STRING
		{
			newLeafNode(lv_description_3_0, grammarAccess.getSkillAccess().getDescriptionSTRINGTerminalRuleCall_1_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSkillRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_3_0, 
        		"STRING");
	    }

)
))?	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSkillAccess().getRightCurlyBracketKeyword_1_2());
    }
)?)
;





// Entry rule entryRuleRequirement
entryRuleRequirement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRequirementRule()); }
	 iv_ruleRequirement=ruleRequirement 
	 { $current=$iv_ruleRequirement.current; } 
	 EOF 
;

// Rule Requirement
ruleRequirement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='requirement' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRequirementAccess().getRequirementKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRequirementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRequirementAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='Description' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRequirementAccess().getDescriptionKeyword_3_0());
    }
(
(
		lv_description_4_0=RULE_STRING
		{
			newLeafNode(lv_description_4_0, grammarAccess.getRequirementAccess().getDescriptionSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_4_0, 
        		"STRING");
	    }

)
))?(	otherlv_5='workItems' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRequirementAccess().getWorkItemsKeyword_4_0());
    }
	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRequirementAccess().getLeftCurlyBracketKeyword_4_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
        }
	otherlv_7=RULE_ID
	{
		newLeafNode(otherlv_7, grammarAccess.getRequirementAccess().getRTasksTaskCrossReference_4_2_0()); 
	}

)
)+	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRequirementAccess().getRightCurlyBracketKeyword_4_3());
    }
)(	otherlv_9='workItemNetwork' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getRequirementAccess().getWorkItemNetworkKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getDependenciesDependencyParserRuleCall_5_1_0()); 
	    }
		lv_dependencies_10_0=ruleDependency		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		add(
       			$current, 
       			"dependencies",
        		lv_dependencies_10_0, 
        		"Dependency");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getRequirementAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleKanbanTaskModel
entryRuleKanbanTaskModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKanbanTaskModelRule()); }
	 iv_ruleKanbanTaskModel=ruleKanbanTaskModel 
	 { $current=$iv_ruleKanbanTaskModel.current; } 
	 EOF 
;

// Rule KanbanTaskModel
ruleKanbanTaskModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='WorkFlow' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getKanbanTaskModelAccess().getWorkFlowKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getKanbanTaskModelAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getKanbanTaskModelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getKanbanTaskModelAccess().getCapsCapabilityParserRuleCall_2_0()); 
	    }
		lv_caps_2_0=ruleCapability		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKanbanTaskModelRule());
	        }
       		add(
       			$current, 
       			"caps",
        		lv_caps_2_0, 
        		"Capability");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='end WorkFlow' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getKanbanTaskModelAccess().getEndWorkFlowKeyword_3());
    }
)
;





// Entry rule entryRuleCapability
entryRuleCapability returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCapabilityRule()); }
	 iv_ruleCapability=ruleCapability 
	 { $current=$iv_ruleCapability.current; } 
	 EOF 
;

// Rule Capability
ruleCapability returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='capability' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCapabilityAccess().getCapabilityKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getCapabilityAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCapabilityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCapabilityAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='Description' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCapabilityAccess().getDescriptionKeyword_3_0());
    }
(
(
		lv_description_4_0=RULE_STRING
		{
			newLeafNode(lv_description_4_0, grammarAccess.getCapabilityAccess().getDescriptionSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCapabilityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_4_0, 
        		"STRING");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getCapabilityAccess().getReqsRequirementParserRuleCall_4_0()); 
	    }
		lv_reqs_5_0=ruleRequirement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCapabilityRule());
	        }
       		add(
       			$current, 
       			"reqs",
        		lv_reqs_5_0, 
        		"Requirement");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCapabilityAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleKanbanGovModel
entryRuleKanbanGovModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKanbanGovModelRule()); }
	 iv_ruleKanbanGovModel=ruleKanbanGovModel 
	 { $current=$iv_ruleKanbanGovModel.current; } 
	 EOF 
;

// Rule KanbanGovModel
ruleKanbanGovModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getKanbanGovModelAccess().getStrategyStrategyParserRuleCall_0()); 
	    }
		lv_strategy_0_0=ruleStrategy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKanbanGovModelRule());
	        }
       		add(
       			$current, 
       			"strategy",
        		lv_strategy_0_0, 
        		"Strategy");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleStrategy
entryRuleStrategy returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStrategyRule()); }
	 iv_ruleStrategy=ruleStrategy 
	 { $current=$iv_ruleStrategy.current; } 
	 EOF 
;

// Rule Strategy
ruleStrategy returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='strategy' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStrategyAccess().getStrategyKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getStrategyAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStrategyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStrategyAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStrategyAccess().getEntitiesEntityParserRuleCall_3_0()); 
	    }
		lv_entities_3_0=ruleEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStrategyRule());
	        }
       		add(
       			$current, 
       			"entities",
        		lv_entities_3_0, 
        		"Entity");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getStrategyAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	 iv_ruleEntity=ruleEntity 
	 { $current=$iv_ruleEntity.current; } 
	 EOF 
;

// Rule Entity
ruleEntity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='entity' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEntityAccess().getEntityKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='ServiceDirectory' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEntityAccess().getServiceDirectoryKeyword_3_0());
    }
(
(
		lv_sdname_4_0=RULE_ID
		{
			newLeafNode(lv_sdname_4_0, grammarAccess.getEntityAccess().getSdnameIDTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"sdname",
        		lv_sdname_4_0, 
        		"ID");
	    }

)
)	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getEntityAccess().getEqualsSignKeyword_3_2());
    }
	otherlv_6='[' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEntityAccess().getLeftSquareBracketKeyword_3_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityAccess().getServiceProvisionsProvisionParserRuleCall_3_4_0()); 
	    }
		lv_serviceProvisions_7_0=ruleProvision		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityRule());
	        }
       		add(
       			$current, 
       			"serviceProvisions",
        		lv_serviceProvisions_7_0, 
        		"Provision");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_8=']' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getEntityAccess().getRightSquareBracketKeyword_3_5());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityAccess().getEntityBehaviorStatemachineParserRuleCall_4_0()); 
	    }
		lv_entityBehavior_9_0=ruleStatemachine		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityRule());
	        }
       		set(
       			$current, 
       			"entityBehavior",
        		lv_entityBehavior_9_0, 
        		"Statemachine");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleProvision
entryRuleProvision returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProvisionRule()); }
	 iv_ruleProvision=ruleProvision 
	 { $current=$iv_ruleProvision.current; } 
	 EOF 
;

// Rule Provision
ruleProvision returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProvisionAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getProvisionRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getProvisionAccess().getServiceNameServiceCrossReference_1_0()); 
	}

)
)	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getProvisionAccess().getCommaKeyword_2());
    }
	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getProvisionAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getProvisionRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getProvisionAccess().getProvidersTeamCrossReference_4_0()); 
	}

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getProvisionAccess().getRightCurlyBracketKeyword_5());
    }
	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getProvisionAccess().getRightParenthesisKeyword_6());
    }
)
;





// Entry rule entryRuleStatemachine
entryRuleStatemachine returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStatemachineRule()); }
	 iv_ruleStatemachine=ruleStatemachine 
	 { $current=$iv_ruleStatemachine.current; } 
	 EOF 
;

// Rule Statemachine
ruleStatemachine returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStatemachineAccess().getStatemachineAction_0(),
            $current);
    }
)(	otherlv_1='events' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStatemachineAccess().getEventsKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatemachineAccess().getEventsEventParserRuleCall_1_1_0()); 
	    }
		lv_events_2_0=ruleEvent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatemachineRule());
	        }
       		add(
       			$current, 
       			"events",
        		lv_events_2_0, 
        		"Event");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='end' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStatemachineAccess().getEndKeyword_1_2());
    }
)?(	otherlv_4='activities' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getStatemachineAccess().getActivitiesKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatemachineAccess().getCommandsCommandParserRuleCall_2_1_0()); 
	    }
		lv_commands_5_0=ruleCommand		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatemachineRule());
	        }
       		add(
       			$current, 
       			"commands",
        		lv_commands_5_0, 
        		"Command");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_6='end' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getStatemachineAccess().getEndKeyword_2_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getStatemachineAccess().getStatesStateParserRuleCall_3_0()); 
	    }
		lv_states_7_0=ruleState		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatemachineRule());
	        }
       		add(
       			$current, 
       			"states",
        		lv_states_7_0, 
        		"State");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleEvent
entryRuleEvent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEventRule()); }
	 iv_ruleEvent=ruleEvent 
	 { $current=$iv_ruleEvent.current; } 
	 EOF 
;

// Rule Event
ruleEvent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getEventAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEventRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)(
(
		lv_code_1_0=RULE_ID
		{
			newLeafNode(lv_code_1_0, grammarAccess.getEventAccess().getCodeIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEventRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"code",
        		lv_code_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleCommand
entryRuleCommand returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCommandRule()); }
	 iv_ruleCommand=ruleCommand 
	 { $current=$iv_ruleCommand.current; } 
	 EOF 
;

// Rule Command
ruleCommand returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getCommandAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCommandRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)(
(
		lv_code_1_0=RULE_ID
		{
			newLeafNode(lv_code_1_0, grammarAccess.getCommandAccess().getCodeIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCommandRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"code",
        		lv_code_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleState
entryRuleState returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStateRule()); }
	 iv_ruleState=ruleState 
	 { $current=$iv_ruleState.current; } 
	 EOF 
;

// Rule State
ruleState returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='state' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStateAccess().getStateKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='actions' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStateAccess().getActionsKeyword_2_0());
    }
	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_2_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getStateAccess().getActionsCommandCrossReference_2_2_0()); 
	}

)
)+	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStateAccess().getRightCurlyBracketKeyword_2_3());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getStateAccess().getTransitionsTransitionParserRuleCall_3_0()); 
	    }
		lv_transitions_6_0=ruleTransition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateRule());
	        }
       		add(
       			$current, 
       			"transitions",
        		lv_transitions_6_0, 
        		"Transition");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='end' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getStateAccess().getEndKeyword_4());
    }
)
;





// Entry rule entryRuleTransition
entryRuleTransition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTransitionRule()); }
	 iv_ruleTransition=ruleTransition 
	 { $current=$iv_ruleTransition.current; } 
	 EOF 
;

// Rule Transition
ruleTransition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransitionRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getTransitionAccess().getEventEventCrossReference_0_0_0()); 
	}

)
)	otherlv_1='=>' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTransitionAccess().getEqualsSignGreaterThanSignKeyword_0_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransitionRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getTransitionAccess().getStateStateCrossReference_0_2_0()); 
	}

)
))
    |((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransitionRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getTransitionAccess().getEventEventCrossReference_1_0_0()); 
	}

)
)	otherlv_4='/' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTransitionAccess().getSolidusKeyword_1_1());
    }
	otherlv_5='[' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTransitionAccess().getLeftSquareBracketKeyword_1_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransitionRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getTransitionAccess().getEventactionsCommandCrossReference_1_3_0()); 
	}

)
)+	otherlv_7=']' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTransitionAccess().getRightSquareBracketKeyword_1_4());
    }
	otherlv_8='=>' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getTransitionAccess().getEqualsSignGreaterThanSignKeyword_1_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransitionRule());
	        }
        }
	otherlv_9=RULE_ID
	{
		newLeafNode(otherlv_9, grammarAccess.getTransitionAccess().getStateStateCrossReference_1_6_0()); 
	}

)
)))
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


