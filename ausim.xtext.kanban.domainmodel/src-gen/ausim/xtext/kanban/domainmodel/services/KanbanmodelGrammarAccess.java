/*
* generated by Xtext
*/
package ausim.xtext.kanban.domainmodel.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class KanbanmodelGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class KanbanSchedulingSystemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "KanbanSchedulingSystem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cKSSModelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cTaskPatternsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cKSSTaskPatternsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cKSSTaskPatternsTaskPatternParserRuleCall_3_0 = (RuleCall)cKSSTaskPatternsAssignment_3.eContents().get(0);
		private final Assignment cKSStaskPatternTypesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cKSStaskPatternTypesTaskTypeParserRuleCall_4_0 = (RuleCall)cKSStaskPatternTypesAssignment_4.eContents().get(0);
		private final Keyword cEndTaskPatternsKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cOrganizationModelKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cSoSServicesAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cSoSServicesServiceParserRuleCall_7_0 = (RuleCall)cSoSServicesAssignment_7.eContents().get(0);
		private final Assignment cOrgUnitsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cOrgUnitsTeamParserRuleCall_8_0 = (RuleCall)cOrgUnitsAssignment_8.eContents().get(0);
		private final Keyword cEndOrganizationModelKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cWorkFlowModelKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cKssTasksAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cKssTasksTaskParserRuleCall_11_0 = (RuleCall)cKssTasksAssignment_11.eContents().get(0);
		private final Assignment cKssWorkFlowAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cKssWorkFlowKanbanTaskModelParserRuleCall_12_0 = (RuleCall)cKssWorkFlowAssignment_12.eContents().get(0);
		private final Keyword cEndWorkFlowModelKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cGovernanceModelKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Assignment cKssGovModelAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cKssGovModelKanbanGovModelParserRuleCall_15_0 = (RuleCall)cKssGovModelAssignment_15.eContents().get(0);
		private final Keyword cEndGovernanceModelKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Keyword cEndKSSModelKeyword_17 = (Keyword)cGroup.eContents().get(17);
		
		//KanbanSchedulingSystem:
		//	"KSSModel" name=ID "TaskPatterns" KSSTaskPatterns+=TaskPattern+ KSStaskPatternTypes+=TaskType+ "end TaskPatterns"
		//	"OrganizationModel" SoSServices+=Service+ orgUnits+=Team+ "end OrganizationModel" "WorkFlowModel" kssTasks+=Task+
		//	kssWorkFlow=KanbanTaskModel "end WorkFlowModel" "GovernanceModel" kssGovModel=KanbanGovModel? "end GovernanceModel"
		//	"end KSSModel";
		public ParserRule getRule() { return rule; }

		//"KSSModel" name=ID "TaskPatterns" KSSTaskPatterns+=TaskPattern+ KSStaskPatternTypes+=TaskType+ "end TaskPatterns"
		//"OrganizationModel" SoSServices+=Service+ orgUnits+=Team+ "end OrganizationModel" "WorkFlowModel" kssTasks+=Task+
		//kssWorkFlow=KanbanTaskModel "end WorkFlowModel" "GovernanceModel" kssGovModel=KanbanGovModel? "end GovernanceModel"
		//"end KSSModel"
		public Group getGroup() { return cGroup; }

		//"KSSModel"
		public Keyword getKSSModelKeyword_0() { return cKSSModelKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"TaskPatterns"
		public Keyword getTaskPatternsKeyword_2() { return cTaskPatternsKeyword_2; }

		//KSSTaskPatterns+=TaskPattern+
		public Assignment getKSSTaskPatternsAssignment_3() { return cKSSTaskPatternsAssignment_3; }

		//TaskPattern
		public RuleCall getKSSTaskPatternsTaskPatternParserRuleCall_3_0() { return cKSSTaskPatternsTaskPatternParserRuleCall_3_0; }

		//KSStaskPatternTypes+=TaskType+
		public Assignment getKSStaskPatternTypesAssignment_4() { return cKSStaskPatternTypesAssignment_4; }

		//TaskType
		public RuleCall getKSStaskPatternTypesTaskTypeParserRuleCall_4_0() { return cKSStaskPatternTypesTaskTypeParserRuleCall_4_0; }

		//"end TaskPatterns"
		public Keyword getEndTaskPatternsKeyword_5() { return cEndTaskPatternsKeyword_5; }

		//"OrganizationModel"
		public Keyword getOrganizationModelKeyword_6() { return cOrganizationModelKeyword_6; }

		//SoSServices+=Service+
		public Assignment getSoSServicesAssignment_7() { return cSoSServicesAssignment_7; }

		//Service
		public RuleCall getSoSServicesServiceParserRuleCall_7_0() { return cSoSServicesServiceParserRuleCall_7_0; }

		//orgUnits+=Team+
		public Assignment getOrgUnitsAssignment_8() { return cOrgUnitsAssignment_8; }

		//Team
		public RuleCall getOrgUnitsTeamParserRuleCall_8_0() { return cOrgUnitsTeamParserRuleCall_8_0; }

		//"end OrganizationModel"
		public Keyword getEndOrganizationModelKeyword_9() { return cEndOrganizationModelKeyword_9; }

		//"WorkFlowModel"
		public Keyword getWorkFlowModelKeyword_10() { return cWorkFlowModelKeyword_10; }

		//kssTasks+=Task+
		public Assignment getKssTasksAssignment_11() { return cKssTasksAssignment_11; }

		//Task
		public RuleCall getKssTasksTaskParserRuleCall_11_0() { return cKssTasksTaskParserRuleCall_11_0; }

		//kssWorkFlow=KanbanTaskModel
		public Assignment getKssWorkFlowAssignment_12() { return cKssWorkFlowAssignment_12; }

		//KanbanTaskModel
		public RuleCall getKssWorkFlowKanbanTaskModelParserRuleCall_12_0() { return cKssWorkFlowKanbanTaskModelParserRuleCall_12_0; }

		//"end WorkFlowModel"
		public Keyword getEndWorkFlowModelKeyword_13() { return cEndWorkFlowModelKeyword_13; }

		//"GovernanceModel"
		public Keyword getGovernanceModelKeyword_14() { return cGovernanceModelKeyword_14; }

		//kssGovModel=KanbanGovModel?
		public Assignment getKssGovModelAssignment_15() { return cKssGovModelAssignment_15; }

		//KanbanGovModel
		public RuleCall getKssGovModelKanbanGovModelParserRuleCall_15_0() { return cKssGovModelKanbanGovModelParserRuleCall_15_0; }

		//"end GovernanceModel"
		public Keyword getEndGovernanceModelKeyword_16() { return cEndGovernanceModelKeyword_16; }

		//"end KSSModel"
		public Keyword getEndKSSModelKeyword_17() { return cEndKSSModelKeyword_17; }
	}

	public class TaskPatternElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TaskPattern");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWorkflowTemplateKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDescriptionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDescriptionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cDescriptionAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTypesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cTaskpatternTypesAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final CrossReference cTaskpatternTypesTaskTypeCrossReference_4_2_0 = (CrossReference)cTaskpatternTypesAssignment_4_2.eContents().get(0);
		private final RuleCall cTaskpatternTypesTaskTypeIDTerminalRuleCall_4_2_0_1 = (RuleCall)cTaskpatternTypesTaskTypeCrossReference_4_2_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//TaskPattern:
		//	"workflowTemplate" name=ID "{" ("Description" description=STRING)? ("Types" "{" taskpatternTypes+=[TaskType]+ "}")?
		//	"}";
		public ParserRule getRule() { return rule; }

		//"workflowTemplate" name=ID "{" ("Description" description=STRING)? ("Types" "{" taskpatternTypes+=[TaskType]+ "}")? "}"
		public Group getGroup() { return cGroup; }

		//"workflowTemplate"
		public Keyword getWorkflowTemplateKeyword_0() { return cWorkflowTemplateKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("Description" description=STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//"Description"
		public Keyword getDescriptionKeyword_3_0() { return cDescriptionKeyword_3_0; }

		//description=STRING
		public Assignment getDescriptionAssignment_3_1() { return cDescriptionAssignment_3_1; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_3_1_0() { return cDescriptionSTRINGTerminalRuleCall_3_1_0; }

		//("Types" "{" taskpatternTypes+=[TaskType]+ "}")?
		public Group getGroup_4() { return cGroup_4; }

		//"Types"
		public Keyword getTypesKeyword_4_0() { return cTypesKeyword_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }

		//taskpatternTypes+=[TaskType]+
		public Assignment getTaskpatternTypesAssignment_4_2() { return cTaskpatternTypesAssignment_4_2; }

		//[TaskType]
		public CrossReference getTaskpatternTypesTaskTypeCrossReference_4_2_0() { return cTaskpatternTypesTaskTypeCrossReference_4_2_0; }

		//ID
		public RuleCall getTaskpatternTypesTaskTypeIDTerminalRuleCall_4_2_0_1() { return cTaskpatternTypesTaskTypeIDTerminalRuleCall_4_2_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_3() { return cRightCurlyBracketKeyword_4_3; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class TaskTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TaskType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTaskTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDescriptionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDescriptionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cDescriptionAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//TaskType:
		//	"taskType" name=ID "{" ("Description" description=STRING)? "}";
		public ParserRule getRule() { return rule; }

		//"taskType" name=ID "{" ("Description" description=STRING)? "}"
		public Group getGroup() { return cGroup; }

		//"taskType"
		public Keyword getTaskTypeKeyword_0() { return cTaskTypeKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("Description" description=STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//"Description"
		public Keyword getDescriptionKeyword_3_0() { return cDescriptionKeyword_3_0; }

		//description=STRING
		public Assignment getDescriptionAssignment_3_1() { return cDescriptionAssignment_3_1; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_3_1_0() { return cDescriptionSTRINGTerminalRuleCall_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class ServiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Service");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cServiceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cDescriptionKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_2_1_1_0 = (RuleCall)cDescriptionAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		
		//Service:
		//	"service" name=ID ("{" ("Description" description=STRING)? "}")?;
		public ParserRule getRule() { return rule; }

		//"service" name=ID ("{" ("Description" description=STRING)? "}")?
		public Group getGroup() { return cGroup; }

		//"service"
		public Keyword getServiceKeyword_0() { return cServiceKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("{" ("Description" description=STRING)? "}")?
		public Group getGroup_2() { return cGroup_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }

		//("Description" description=STRING)?
		public Group getGroup_2_1() { return cGroup_2_1; }

		//"Description"
		public Keyword getDescriptionKeyword_2_1_0() { return cDescriptionKeyword_2_1_0; }

		//description=STRING
		public Assignment getDescriptionAssignment_2_1_1() { return cDescriptionAssignment_2_1_1; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_2_1_1_0() { return cDescriptionSTRINGTerminalRuleCall_2_1_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_2() { return cRightCurlyBracketKeyword_2_2; }
	}

	public class TaskElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Task");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWorkItemKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDescriptionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDescriptionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cDescriptionAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cPatternKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cPatternAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cPatternTaskPatternCrossReference_4_1_0 = (CrossReference)cPatternAssignment_4_1.eContents().get(0);
		private final RuleCall cPatternTaskPatternIDTerminalRuleCall_4_1_0_1 = (RuleCall)cPatternTaskPatternCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTypeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cPatternTypeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cPatternTypeTaskTypeCrossReference_5_1_0 = (CrossReference)cPatternTypeAssignment_5_1.eContents().get(0);
		private final RuleCall cPatternTypeTaskTypeIDTerminalRuleCall_5_1_0_1 = (RuleCall)cPatternTypeTaskTypeCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cSubtasksKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cSTasksAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final CrossReference cSTasksTaskCrossReference_6_2_0 = (CrossReference)cSTasksAssignment_6_2.eContents().get(0);
		private final RuleCall cSTasksTaskIDTerminalRuleCall_6_2_0_1 = (RuleCall)cSTasksTaskCrossReference_6_2_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cTaskDependenciesKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cTaskDependenciesAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cTaskDependenciesDependencyParserRuleCall_7_1_0 = (RuleCall)cTaskDependenciesAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cServicesRequiredKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cReqSpecialtiesAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final CrossReference cReqSpecialtiesServiceCrossReference_8_1_0 = (CrossReference)cReqSpecialtiesAssignment_8_1.eContents().get(0);
		private final RuleCall cReqSpecialtiesServiceIDTerminalRuleCall_8_1_0_1 = (RuleCall)cReqSpecialtiesServiceCrossReference_8_1_0.eContents().get(1);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cBaseEffortsKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cBeffortsAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cBeffortsINTTerminalRuleCall_9_1_0 = (RuleCall)cBeffortsAssignment_9_1.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cBaseValueKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cBvalueAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cBvalueINTTerminalRuleCall_10_1_0 = (RuleCall)cBvalueAssignment_10_1.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cClassOfServiceKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cCOSAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cCOSIDTerminalRuleCall_11_1_0 = (RuleCall)cCOSAssignment_11_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//Task:
		//	"workItem" name=ID "{" ("Description" description=STRING)? ("Pattern" pattern+=[TaskPattern])? ("Type"
		//	patternType+=[TaskType])? ("subtasks" "{" sTasks+=[Task]+ "}")? ("taskDependencies" taskDependencies+=Dependency*)?
		//	("servicesRequired" reqSpecialties+=[Service]+)? ("base efforts" befforts=INT)? ("base value" bvalue=INT)?
		//	("classOfService" COS=ID)? "}";
		public ParserRule getRule() { return rule; }

		//"workItem" name=ID "{" ("Description" description=STRING)? ("Pattern" pattern+=[TaskPattern])? ("Type"
		//patternType+=[TaskType])? ("subtasks" "{" sTasks+=[Task]+ "}")? ("taskDependencies" taskDependencies+=Dependency*)?
		//("servicesRequired" reqSpecialties+=[Service]+)? ("base efforts" befforts=INT)? ("base value" bvalue=INT)?
		//("classOfService" COS=ID)? "}"
		public Group getGroup() { return cGroup; }

		//"workItem"
		public Keyword getWorkItemKeyword_0() { return cWorkItemKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("Description" description=STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//"Description"
		public Keyword getDescriptionKeyword_3_0() { return cDescriptionKeyword_3_0; }

		//description=STRING
		public Assignment getDescriptionAssignment_3_1() { return cDescriptionAssignment_3_1; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_3_1_0() { return cDescriptionSTRINGTerminalRuleCall_3_1_0; }

		//("Pattern" pattern+=[TaskPattern])?
		public Group getGroup_4() { return cGroup_4; }

		//"Pattern"
		public Keyword getPatternKeyword_4_0() { return cPatternKeyword_4_0; }

		//pattern+=[TaskPattern]
		public Assignment getPatternAssignment_4_1() { return cPatternAssignment_4_1; }

		//[TaskPattern]
		public CrossReference getPatternTaskPatternCrossReference_4_1_0() { return cPatternTaskPatternCrossReference_4_1_0; }

		//ID
		public RuleCall getPatternTaskPatternIDTerminalRuleCall_4_1_0_1() { return cPatternTaskPatternIDTerminalRuleCall_4_1_0_1; }

		//("Type" patternType+=[TaskType])?
		public Group getGroup_5() { return cGroup_5; }

		//"Type"
		public Keyword getTypeKeyword_5_0() { return cTypeKeyword_5_0; }

		//patternType+=[TaskType]
		public Assignment getPatternTypeAssignment_5_1() { return cPatternTypeAssignment_5_1; }

		//[TaskType]
		public CrossReference getPatternTypeTaskTypeCrossReference_5_1_0() { return cPatternTypeTaskTypeCrossReference_5_1_0; }

		//ID
		public RuleCall getPatternTypeTaskTypeIDTerminalRuleCall_5_1_0_1() { return cPatternTypeTaskTypeIDTerminalRuleCall_5_1_0_1; }

		//("subtasks" "{" sTasks+=[Task]+ "}")?
		public Group getGroup_6() { return cGroup_6; }

		//"subtasks"
		public Keyword getSubtasksKeyword_6_0() { return cSubtasksKeyword_6_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }

		//sTasks+=[Task]+
		public Assignment getSTasksAssignment_6_2() { return cSTasksAssignment_6_2; }

		//[Task]
		public CrossReference getSTasksTaskCrossReference_6_2_0() { return cSTasksTaskCrossReference_6_2_0; }

		//ID
		public RuleCall getSTasksTaskIDTerminalRuleCall_6_2_0_1() { return cSTasksTaskIDTerminalRuleCall_6_2_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6_3() { return cRightCurlyBracketKeyword_6_3; }

		//("taskDependencies" taskDependencies+=Dependency*)?
		public Group getGroup_7() { return cGroup_7; }

		//"taskDependencies"
		public Keyword getTaskDependenciesKeyword_7_0() { return cTaskDependenciesKeyword_7_0; }

		//taskDependencies+=Dependency*
		public Assignment getTaskDependenciesAssignment_7_1() { return cTaskDependenciesAssignment_7_1; }

		//Dependency
		public RuleCall getTaskDependenciesDependencyParserRuleCall_7_1_0() { return cTaskDependenciesDependencyParserRuleCall_7_1_0; }

		//("servicesRequired" reqSpecialties+=[Service]+)?
		public Group getGroup_8() { return cGroup_8; }

		//"servicesRequired"
		public Keyword getServicesRequiredKeyword_8_0() { return cServicesRequiredKeyword_8_0; }

		//reqSpecialties+=[Service]+
		public Assignment getReqSpecialtiesAssignment_8_1() { return cReqSpecialtiesAssignment_8_1; }

		//[Service]
		public CrossReference getReqSpecialtiesServiceCrossReference_8_1_0() { return cReqSpecialtiesServiceCrossReference_8_1_0; }

		//ID
		public RuleCall getReqSpecialtiesServiceIDTerminalRuleCall_8_1_0_1() { return cReqSpecialtiesServiceIDTerminalRuleCall_8_1_0_1; }

		//("base efforts" befforts=INT)?
		public Group getGroup_9() { return cGroup_9; }

		//"base efforts"
		public Keyword getBaseEffortsKeyword_9_0() { return cBaseEffortsKeyword_9_0; }

		//befforts=INT
		public Assignment getBeffortsAssignment_9_1() { return cBeffortsAssignment_9_1; }

		//INT
		public RuleCall getBeffortsINTTerminalRuleCall_9_1_0() { return cBeffortsINTTerminalRuleCall_9_1_0; }

		//("base value" bvalue=INT)?
		public Group getGroup_10() { return cGroup_10; }

		//"base value"
		public Keyword getBaseValueKeyword_10_0() { return cBaseValueKeyword_10_0; }

		//bvalue=INT
		public Assignment getBvalueAssignment_10_1() { return cBvalueAssignment_10_1; }

		//INT
		public RuleCall getBvalueINTTerminalRuleCall_10_1_0() { return cBvalueINTTerminalRuleCall_10_1_0; }

		//("classOfService" COS=ID)?
		public Group getGroup_11() { return cGroup_11; }

		//"classOfService"
		public Keyword getClassOfServiceKeyword_11_0() { return cClassOfServiceKeyword_11_0; }

		//COS=ID
		public Assignment getCOSAssignment_11_1() { return cCOSAssignment_11_1; }

		//ID
		public RuleCall getCOSIDTerminalRuleCall_11_1_0() { return cCOSIDTerminalRuleCall_11_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}

	public class DependencyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Dependency");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSourceTaskAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cSourceTaskTaskCrossReference_0_0 = (CrossReference)cSourceTaskAssignment_0.eContents().get(0);
		private final RuleCall cSourceTaskTaskIDTerminalRuleCall_0_0_1 = (RuleCall)cSourceTaskTaskCrossReference_0_0.eContents().get(1);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Keyword cEqualsSignGreaterThanSignKeyword_1_0 = (Keyword)cAlternatives_1.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		private final Assignment cTargetTaskAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTargetTaskTaskCrossReference_2_0 = (CrossReference)cTargetTaskAssignment_2.eContents().get(0);
		private final RuleCall cTargetTaskTaskIDTerminalRuleCall_2_0_1 = (RuleCall)cTargetTaskTaskCrossReference_2_0.eContents().get(1);
		
		//Dependency:
		//	sourceTask=[Task] ("=>" | "->") targetTask=[Task];
		public ParserRule getRule() { return rule; }

		//sourceTask=[Task] ("=>" | "->") targetTask=[Task]
		public Group getGroup() { return cGroup; }

		//sourceTask=[Task]
		public Assignment getSourceTaskAssignment_0() { return cSourceTaskAssignment_0; }

		//[Task]
		public CrossReference getSourceTaskTaskCrossReference_0_0() { return cSourceTaskTaskCrossReference_0_0; }

		//ID
		public RuleCall getSourceTaskTaskIDTerminalRuleCall_0_0_1() { return cSourceTaskTaskIDTerminalRuleCall_0_0_1; }

		//"=>" | "->"
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//"=>"
		public Keyword getEqualsSignGreaterThanSignKeyword_1_0() { return cEqualsSignGreaterThanSignKeyword_1_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1_1() { return cHyphenMinusGreaterThanSignKeyword_1_1; }

		//targetTask=[Task]
		public Assignment getTargetTaskAssignment_2() { return cTargetTaskAssignment_2; }

		//[Task]
		public CrossReference getTargetTaskTaskCrossReference_2_0() { return cTargetTaskTaskCrossReference_2_0; }

		//ID
		public RuleCall getTargetTaskTaskIDTerminalRuleCall_2_0_1() { return cTargetTaskTaskIDTerminalRuleCall_2_0_1; }
	}

	public class TeamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Team");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cTeamKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cGroupKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDescriptionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDescriptionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cDescriptionAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSourceUnitsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cDemandUnitsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final CrossReference cDemandUnitsTeamCrossReference_4_2_0 = (CrossReference)cDemandUnitsAssignment_4_2.eContents().get(0);
		private final RuleCall cDemandUnitsTeamIDTerminalRuleCall_4_2_0_1 = (RuleCall)cDemandUnitsTeamCrossReference_4_2_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTargetUnitsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cSourcedUnitsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final CrossReference cSourcedUnitsTeamCrossReference_5_2_0 = (CrossReference)cSourcedUnitsAssignment_5_2.eContents().get(0);
		private final RuleCall cSourcedUnitsTeamIDTerminalRuleCall_5_2_0_1 = (RuleCall)cSourcedUnitsTeamCrossReference_5_2_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cContainsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cGroupmembersAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final CrossReference cGroupmembersTeamCrossReference_6_2_0 = (CrossReference)cGroupmembersAssignment_6_2.eContents().get(0);
		private final RuleCall cGroupmembersTeamIDTerminalRuleCall_6_2_0_1 = (RuleCall)cGroupmembersTeamCrossReference_6_2_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cResourcesKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cResourcesAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cResourcesAssetParserRuleCall_7_2_0 = (RuleCall)cResourcesAssignment_7_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cServicesKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cServicesAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final CrossReference cServicesServiceCrossReference_8_2_0 = (CrossReference)cServicesAssignment_8_2.eContents().get(0);
		private final RuleCall cServicesServiceIDTerminalRuleCall_8_2_0_1 = (RuleCall)cServicesServiceCrossReference_8_2_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_8_3 = (Keyword)cGroup_8.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Team:
		//	("team" | "group") name=ID "{" ("Description" description=STRING)? ("sourceUnits" "{" demandUnits+=[Team]+ "}")?
		//	("targetUnits" "{" sourcedUnits+=[Team]+ "}")? ("contains" "{" groupmembers+=[Team]+ "}")? ("resources" "{"
		//	resources+=Asset+ "}")? ("services" "{" services+=[Service]+ "}")? "}";
		public ParserRule getRule() { return rule; }

		//("team" | "group") name=ID "{" ("Description" description=STRING)? ("sourceUnits" "{" demandUnits+=[Team]+ "}")?
		//("targetUnits" "{" sourcedUnits+=[Team]+ "}")? ("contains" "{" groupmembers+=[Team]+ "}")? ("resources" "{"
		//resources+=Asset+ "}")? ("services" "{" services+=[Service]+ "}")? "}"
		public Group getGroup() { return cGroup; }

		//"team" | "group"
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//"team"
		public Keyword getTeamKeyword_0_0() { return cTeamKeyword_0_0; }

		//"group"
		public Keyword getGroupKeyword_0_1() { return cGroupKeyword_0_1; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("Description" description=STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//"Description"
		public Keyword getDescriptionKeyword_3_0() { return cDescriptionKeyword_3_0; }

		//description=STRING
		public Assignment getDescriptionAssignment_3_1() { return cDescriptionAssignment_3_1; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_3_1_0() { return cDescriptionSTRINGTerminalRuleCall_3_1_0; }

		//("sourceUnits" "{" demandUnits+=[Team]+ "}")?
		public Group getGroup_4() { return cGroup_4; }

		//"sourceUnits"
		public Keyword getSourceUnitsKeyword_4_0() { return cSourceUnitsKeyword_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }

		//demandUnits+=[Team]+
		public Assignment getDemandUnitsAssignment_4_2() { return cDemandUnitsAssignment_4_2; }

		//[Team]
		public CrossReference getDemandUnitsTeamCrossReference_4_2_0() { return cDemandUnitsTeamCrossReference_4_2_0; }

		//ID
		public RuleCall getDemandUnitsTeamIDTerminalRuleCall_4_2_0_1() { return cDemandUnitsTeamIDTerminalRuleCall_4_2_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_3() { return cRightCurlyBracketKeyword_4_3; }

		//("targetUnits" "{" sourcedUnits+=[Team]+ "}")?
		public Group getGroup_5() { return cGroup_5; }

		//"targetUnits"
		public Keyword getTargetUnitsKeyword_5_0() { return cTargetUnitsKeyword_5_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }

		//sourcedUnits+=[Team]+
		public Assignment getSourcedUnitsAssignment_5_2() { return cSourcedUnitsAssignment_5_2; }

		//[Team]
		public CrossReference getSourcedUnitsTeamCrossReference_5_2_0() { return cSourcedUnitsTeamCrossReference_5_2_0; }

		//ID
		public RuleCall getSourcedUnitsTeamIDTerminalRuleCall_5_2_0_1() { return cSourcedUnitsTeamIDTerminalRuleCall_5_2_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5_3() { return cRightCurlyBracketKeyword_5_3; }

		//("contains" "{" groupmembers+=[Team]+ "}")?
		public Group getGroup_6() { return cGroup_6; }

		//"contains"
		public Keyword getContainsKeyword_6_0() { return cContainsKeyword_6_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }

		//groupmembers+=[Team]+
		public Assignment getGroupmembersAssignment_6_2() { return cGroupmembersAssignment_6_2; }

		//[Team]
		public CrossReference getGroupmembersTeamCrossReference_6_2_0() { return cGroupmembersTeamCrossReference_6_2_0; }

		//ID
		public RuleCall getGroupmembersTeamIDTerminalRuleCall_6_2_0_1() { return cGroupmembersTeamIDTerminalRuleCall_6_2_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6_3() { return cRightCurlyBracketKeyword_6_3; }

		//("resources" "{" resources+=Asset+ "}")?
		public Group getGroup_7() { return cGroup_7; }

		//"resources"
		public Keyword getResourcesKeyword_7_0() { return cResourcesKeyword_7_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }

		//resources+=Asset+
		public Assignment getResourcesAssignment_7_2() { return cResourcesAssignment_7_2; }

		//Asset
		public RuleCall getResourcesAssetParserRuleCall_7_2_0() { return cResourcesAssetParserRuleCall_7_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7_3() { return cRightCurlyBracketKeyword_7_3; }

		//("services" "{" services+=[Service]+ "}")?
		public Group getGroup_8() { return cGroup_8; }

		//"services"
		public Keyword getServicesKeyword_8_0() { return cServicesKeyword_8_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_8_1() { return cLeftCurlyBracketKeyword_8_1; }

		//services+=[Service]+
		public Assignment getServicesAssignment_8_2() { return cServicesAssignment_8_2; }

		//[Service]
		public CrossReference getServicesServiceCrossReference_8_2_0() { return cServicesServiceCrossReference_8_2_0; }

		//ID
		public RuleCall getServicesServiceIDTerminalRuleCall_8_2_0_1() { return cServicesServiceIDTerminalRuleCall_8_2_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8_3() { return cRightCurlyBracketKeyword_8_3; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}

	public class AssetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Asset");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cResourceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDescriptionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDescriptionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cDescriptionAssignment_3_1.eContents().get(0);
		private final Keyword cSkillsKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cHasSkillsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cHasSkillsSkillParserRuleCall_6_0 = (RuleCall)cHasSkillsAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Asset:
		//	"resource" name=ID "{" ("Description" description=STRING)? "skills" "{" hasSkills+=Skill+ "}" "}";
		public ParserRule getRule() { return rule; }

		//"resource" name=ID "{" ("Description" description=STRING)? "skills" "{" hasSkills+=Skill+ "}" "}"
		public Group getGroup() { return cGroup; }

		//"resource"
		public Keyword getResourceKeyword_0() { return cResourceKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("Description" description=STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//"Description"
		public Keyword getDescriptionKeyword_3_0() { return cDescriptionKeyword_3_0; }

		//description=STRING
		public Assignment getDescriptionAssignment_3_1() { return cDescriptionAssignment_3_1; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_3_1_0() { return cDescriptionSTRINGTerminalRuleCall_3_1_0; }

		//"skills"
		public Keyword getSkillsKeyword_4() { return cSkillsKeyword_4; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//hasSkills+=Skill+
		public Assignment getHasSkillsAssignment_6() { return cHasSkillsAssignment_6; }

		//Skill
		public RuleCall getHasSkillsSkillParserRuleCall_6_0() { return cHasSkillsSkillParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class SkillElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Skill");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cDescriptionKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_1_1_1_0 = (RuleCall)cDescriptionAssignment_1_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//Skill:
		//	name=ID ("{" ("Description" description=STRING)? "}")?;
		public ParserRule getRule() { return rule; }

		//name=ID ("{" ("Description" description=STRING)? "}")?
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//("{" ("Description" description=STRING)? "}")?
		public Group getGroup_1() { return cGroup_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }

		//("Description" description=STRING)?
		public Group getGroup_1_1() { return cGroup_1_1; }

		//"Description"
		public Keyword getDescriptionKeyword_1_1_0() { return cDescriptionKeyword_1_1_0; }

		//description=STRING
		public Assignment getDescriptionAssignment_1_1_1() { return cDescriptionAssignment_1_1_1; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_1_1_1_0() { return cDescriptionSTRINGTerminalRuleCall_1_1_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}

	public class RequirementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Requirement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRequirementKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDescriptionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDescriptionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cDescriptionAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cWorkItemsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cRTasksAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final CrossReference cRTasksTaskCrossReference_4_2_0 = (CrossReference)cRTasksAssignment_4_2.eContents().get(0);
		private final RuleCall cRTasksTaskIDTerminalRuleCall_4_2_0_1 = (RuleCall)cRTasksTaskCrossReference_4_2_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cWorkItemNetworkKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cDependenciesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cDependenciesDependencyParserRuleCall_5_1_0 = (RuleCall)cDependenciesAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Requirement:
		//	"requirement" name=ID "{" ("Description" description=STRING)? ("workItems" "{" rTasks+=[Task]+ "}")
		//	("workItemNetwork" dependencies+=Dependency*)? "}";
		public ParserRule getRule() { return rule; }

		//"requirement" name=ID "{" ("Description" description=STRING)? ("workItems" "{" rTasks+=[Task]+ "}") ("workItemNetwork"
		//dependencies+=Dependency*)? "}"
		public Group getGroup() { return cGroup; }

		//"requirement"
		public Keyword getRequirementKeyword_0() { return cRequirementKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("Description" description=STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//"Description"
		public Keyword getDescriptionKeyword_3_0() { return cDescriptionKeyword_3_0; }

		//description=STRING
		public Assignment getDescriptionAssignment_3_1() { return cDescriptionAssignment_3_1; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_3_1_0() { return cDescriptionSTRINGTerminalRuleCall_3_1_0; }

		//"workItems" "{" rTasks+=[Task]+ "}"
		public Group getGroup_4() { return cGroup_4; }

		//"workItems"
		public Keyword getWorkItemsKeyword_4_0() { return cWorkItemsKeyword_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }

		//rTasks+=[Task]+
		public Assignment getRTasksAssignment_4_2() { return cRTasksAssignment_4_2; }

		//[Task]
		public CrossReference getRTasksTaskCrossReference_4_2_0() { return cRTasksTaskCrossReference_4_2_0; }

		//ID
		public RuleCall getRTasksTaskIDTerminalRuleCall_4_2_0_1() { return cRTasksTaskIDTerminalRuleCall_4_2_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_3() { return cRightCurlyBracketKeyword_4_3; }

		//("workItemNetwork" dependencies+=Dependency*)?
		public Group getGroup_5() { return cGroup_5; }

		//"workItemNetwork"
		public Keyword getWorkItemNetworkKeyword_5_0() { return cWorkItemNetworkKeyword_5_0; }

		//dependencies+=Dependency*
		public Assignment getDependenciesAssignment_5_1() { return cDependenciesAssignment_5_1; }

		//Dependency
		public RuleCall getDependenciesDependencyParserRuleCall_5_1_0() { return cDependenciesDependencyParserRuleCall_5_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class KanbanTaskModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "KanbanTaskModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWorkFlowKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cCapsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCapsCapabilityParserRuleCall_2_0 = (RuleCall)cCapsAssignment_2.eContents().get(0);
		private final Keyword cEndWorkFlowKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//KanbanTaskModel:
		//	"WorkFlow" name=ID caps+=Capability+ "end WorkFlow";
		public ParserRule getRule() { return rule; }

		//"WorkFlow" name=ID caps+=Capability+ "end WorkFlow"
		public Group getGroup() { return cGroup; }

		//"WorkFlow"
		public Keyword getWorkFlowKeyword_0() { return cWorkFlowKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//caps+=Capability+
		public Assignment getCapsAssignment_2() { return cCapsAssignment_2; }

		//Capability
		public RuleCall getCapsCapabilityParserRuleCall_2_0() { return cCapsCapabilityParserRuleCall_2_0; }

		//"end WorkFlow"
		public Keyword getEndWorkFlowKeyword_3() { return cEndWorkFlowKeyword_3; }
	}

	public class CapabilityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Capability");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCapabilityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDescriptionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDescriptionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cDescriptionAssignment_3_1.eContents().get(0);
		private final Assignment cReqsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cReqsRequirementParserRuleCall_4_0 = (RuleCall)cReqsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Capability:
		//	"capability" name=ID "{" ("Description" description=STRING)? reqs+=Requirement+ "}";
		public ParserRule getRule() { return rule; }

		//"capability" name=ID "{" ("Description" description=STRING)? reqs+=Requirement+ "}"
		public Group getGroup() { return cGroup; }

		//"capability"
		public Keyword getCapabilityKeyword_0() { return cCapabilityKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("Description" description=STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//"Description"
		public Keyword getDescriptionKeyword_3_0() { return cDescriptionKeyword_3_0; }

		//description=STRING
		public Assignment getDescriptionAssignment_3_1() { return cDescriptionAssignment_3_1; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_3_1_0() { return cDescriptionSTRINGTerminalRuleCall_3_1_0; }

		//reqs+=Requirement+
		public Assignment getReqsAssignment_4() { return cReqsAssignment_4; }

		//Requirement
		public RuleCall getReqsRequirementParserRuleCall_4_0() { return cReqsRequirementParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class KanbanGovModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "KanbanGovModel");
		private final Assignment cStrategyAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cStrategyStrategyParserRuleCall_0 = (RuleCall)cStrategyAssignment.eContents().get(0);
		
		//KanbanGovModel:
		//	strategy+=Strategy;
		public ParserRule getRule() { return rule; }

		//strategy+=Strategy
		public Assignment getStrategyAssignment() { return cStrategyAssignment; }

		//Strategy
		public RuleCall getStrategyStrategyParserRuleCall_0() { return cStrategyStrategyParserRuleCall_0; }
	}

	public class StrategyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Strategy");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStrategyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEntitiesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEntitiesEntityParserRuleCall_3_0 = (RuleCall)cEntitiesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Strategy:
		//	"strategy" name=ID "{" entities+=Entity* "}";
		public ParserRule getRule() { return rule; }

		//"strategy" name=ID "{" entities+=Entity* "}"
		public Group getGroup() { return cGroup; }

		//"strategy"
		public Keyword getStrategyKeyword_0() { return cStrategyKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//entities+=Entity*
		public Assignment getEntitiesAssignment_3() { return cEntitiesAssignment_3; }

		//Entity
		public RuleCall getEntitiesEntityParserRuleCall_3_0() { return cEntitiesEntityParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Entity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEntityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cServiceDirectoryKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSdnameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cSdnameIDTerminalRuleCall_3_1_0 = (RuleCall)cSdnameAssignment_3_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Assignment cServiceProvisionsAssignment_3_4 = (Assignment)cGroup_3.eContents().get(4);
		private final RuleCall cServiceProvisionsProvisionParserRuleCall_3_4_0 = (RuleCall)cServiceProvisionsAssignment_3_4.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_5 = (Keyword)cGroup_3.eContents().get(5);
		private final Assignment cEntityBehaviorAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cEntityBehaviorStatemachineParserRuleCall_4_0 = (RuleCall)cEntityBehaviorAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Entity:
		//	"entity" name=ID "{" ("ServiceDirectory" sdname=ID "=" "[" serviceProvisions+=Provision* "]")?
		//	entityBehavior=Statemachine "}";
		public ParserRule getRule() { return rule; }

		//"entity" name=ID "{" ("ServiceDirectory" sdname=ID "=" "[" serviceProvisions+=Provision* "]")?
		//entityBehavior=Statemachine "}"
		public Group getGroup() { return cGroup; }

		//"entity"
		public Keyword getEntityKeyword_0() { return cEntityKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("ServiceDirectory" sdname=ID "=" "[" serviceProvisions+=Provision* "]")?
		public Group getGroup_3() { return cGroup_3; }

		//"ServiceDirectory"
		public Keyword getServiceDirectoryKeyword_3_0() { return cServiceDirectoryKeyword_3_0; }

		//sdname=ID
		public Assignment getSdnameAssignment_3_1() { return cSdnameAssignment_3_1; }

		//ID
		public RuleCall getSdnameIDTerminalRuleCall_3_1_0() { return cSdnameIDTerminalRuleCall_3_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_3_2() { return cEqualsSignKeyword_3_2; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3_3() { return cLeftSquareBracketKeyword_3_3; }

		//serviceProvisions+=Provision*
		public Assignment getServiceProvisionsAssignment_3_4() { return cServiceProvisionsAssignment_3_4; }

		//Provision
		public RuleCall getServiceProvisionsProvisionParserRuleCall_3_4_0() { return cServiceProvisionsProvisionParserRuleCall_3_4_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3_5() { return cRightSquareBracketKeyword_3_5; }

		//entityBehavior=Statemachine
		public Assignment getEntityBehaviorAssignment_4() { return cEntityBehaviorAssignment_4; }

		//Statemachine
		public RuleCall getEntityBehaviorStatemachineParserRuleCall_4_0() { return cEntityBehaviorStatemachineParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ProvisionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Provision");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cServiceNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cServiceNameServiceCrossReference_1_0 = (CrossReference)cServiceNameAssignment_1.eContents().get(0);
		private final RuleCall cServiceNameServiceIDTerminalRuleCall_1_0_1 = (RuleCall)cServiceNameServiceCrossReference_1_0.eContents().get(1);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cProvidersAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cProvidersTeamCrossReference_4_0 = (CrossReference)cProvidersAssignment_4.eContents().get(0);
		private final RuleCall cProvidersTeamIDTerminalRuleCall_4_0_1 = (RuleCall)cProvidersTeamCrossReference_4_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Provision:
		//	"(" serviceName=[Service] "," "{" providers+=[Team]* "}" ")";
		public ParserRule getRule() { return rule; }

		//"(" serviceName=[Service] "," "{" providers+=[Team]* "}" ")"
		public Group getGroup() { return cGroup; }

		//"("
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }

		//serviceName=[Service]
		public Assignment getServiceNameAssignment_1() { return cServiceNameAssignment_1; }

		//[Service]
		public CrossReference getServiceNameServiceCrossReference_1_0() { return cServiceNameServiceCrossReference_1_0; }

		//ID
		public RuleCall getServiceNameServiceIDTerminalRuleCall_1_0_1() { return cServiceNameServiceIDTerminalRuleCall_1_0_1; }

		//","
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//providers+=[Team]*
		public Assignment getProvidersAssignment_4() { return cProvidersAssignment_4; }

		//[Team]
		public CrossReference getProvidersTeamCrossReference_4_0() { return cProvidersTeamCrossReference_4_0; }

		//ID
		public RuleCall getProvidersTeamIDTerminalRuleCall_4_0_1() { return cProvidersTeamIDTerminalRuleCall_4_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }

		//")"
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}

	public class StatemachineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Statemachine");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cStatemachineAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cEventsKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cEventsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cEventsEventParserRuleCall_1_1_0 = (RuleCall)cEventsAssignment_1_1.eContents().get(0);
		private final Keyword cEndKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cActivitiesKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cCommandsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cCommandsCommandParserRuleCall_2_1_0 = (RuleCall)cCommandsAssignment_2_1.eContents().get(0);
		private final Keyword cEndKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cStatesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cStatesStateParserRuleCall_3_0 = (RuleCall)cStatesAssignment_3.eContents().get(0);
		
		//Statemachine:
		//	{Statemachine} ("events" events+=Event+ "end")? ("activities" commands+=Command+ "end")? states+=State*;
		public ParserRule getRule() { return rule; }

		//{Statemachine} ("events" events+=Event+ "end")? ("activities" commands+=Command+ "end")? states+=State*
		public Group getGroup() { return cGroup; }

		//{Statemachine}
		public Action getStatemachineAction_0() { return cStatemachineAction_0; }

		//("events" events+=Event+ "end")?
		public Group getGroup_1() { return cGroup_1; }

		//"events"
		public Keyword getEventsKeyword_1_0() { return cEventsKeyword_1_0; }

		//events+=Event+
		public Assignment getEventsAssignment_1_1() { return cEventsAssignment_1_1; }

		//Event
		public RuleCall getEventsEventParserRuleCall_1_1_0() { return cEventsEventParserRuleCall_1_1_0; }

		//"end"
		public Keyword getEndKeyword_1_2() { return cEndKeyword_1_2; }

		//("activities" commands+=Command+ "end")?
		public Group getGroup_2() { return cGroup_2; }

		//"activities"
		public Keyword getActivitiesKeyword_2_0() { return cActivitiesKeyword_2_0; }

		//commands+=Command+
		public Assignment getCommandsAssignment_2_1() { return cCommandsAssignment_2_1; }

		//Command
		public RuleCall getCommandsCommandParserRuleCall_2_1_0() { return cCommandsCommandParserRuleCall_2_1_0; }

		//"end"
		public Keyword getEndKeyword_2_2() { return cEndKeyword_2_2; }

		//states+=State*
		public Assignment getStatesAssignment_3() { return cStatesAssignment_3; }

		//State
		public RuleCall getStatesStateParserRuleCall_3_0() { return cStatesStateParserRuleCall_3_0; }
	}

	public class EventElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Event");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cCodeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCodeIDTerminalRuleCall_1_0 = (RuleCall)cCodeAssignment_1.eContents().get(0);
		
		//Event:
		//	name=ID code=ID;
		public ParserRule getRule() { return rule; }

		//name=ID code=ID
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//code=ID
		public Assignment getCodeAssignment_1() { return cCodeAssignment_1; }

		//ID
		public RuleCall getCodeIDTerminalRuleCall_1_0() { return cCodeIDTerminalRuleCall_1_0; }
	}

	public class CommandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Command");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cCodeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCodeIDTerminalRuleCall_1_0 = (RuleCall)cCodeAssignment_1.eContents().get(0);
		
		//Command:
		//	name=ID code=ID;
		public ParserRule getRule() { return rule; }

		//name=ID code=ID
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//code=ID
		public Assignment getCodeAssignment_1() { return cCodeAssignment_1; }

		//ID
		public RuleCall getCodeIDTerminalRuleCall_1_0() { return cCodeIDTerminalRuleCall_1_0; }
	}

	public class StateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "State");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStateKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cActionsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cActionsAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final CrossReference cActionsCommandCrossReference_2_2_0 = (CrossReference)cActionsAssignment_2_2.eContents().get(0);
		private final RuleCall cActionsCommandIDTerminalRuleCall_2_2_0_1 = (RuleCall)cActionsCommandCrossReference_2_2_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Assignment cTransitionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTransitionsTransitionParserRuleCall_3_0 = (RuleCall)cTransitionsAssignment_3.eContents().get(0);
		private final Keyword cEndKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//State:
		//	"state" name=ID ("actions" "{" actions+=[Command]+ "}")? transitions+=Transition* "end";
		public ParserRule getRule() { return rule; }

		//"state" name=ID ("actions" "{" actions+=[Command]+ "}")? transitions+=Transition* "end"
		public Group getGroup() { return cGroup; }

		//"state"
		public Keyword getStateKeyword_0() { return cStateKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("actions" "{" actions+=[Command]+ "}")?
		public Group getGroup_2() { return cGroup_2; }

		//"actions"
		public Keyword getActionsKeyword_2_0() { return cActionsKeyword_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_1() { return cLeftCurlyBracketKeyword_2_1; }

		//actions+=[Command]+
		public Assignment getActionsAssignment_2_2() { return cActionsAssignment_2_2; }

		//[Command]
		public CrossReference getActionsCommandCrossReference_2_2_0() { return cActionsCommandCrossReference_2_2_0; }

		//ID
		public RuleCall getActionsCommandIDTerminalRuleCall_2_2_0_1() { return cActionsCommandIDTerminalRuleCall_2_2_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_3() { return cRightCurlyBracketKeyword_2_3; }

		//transitions+=Transition*
		public Assignment getTransitionsAssignment_3() { return cTransitionsAssignment_3; }

		//Transition
		public RuleCall getTransitionsTransitionParserRuleCall_3_0() { return cTransitionsTransitionParserRuleCall_3_0; }

		//"end"
		public Keyword getEndKeyword_4() { return cEndKeyword_4; }
	}

	public class TransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Transition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cEventAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final CrossReference cEventEventCrossReference_0_0_0 = (CrossReference)cEventAssignment_0_0.eContents().get(0);
		private final RuleCall cEventEventIDTerminalRuleCall_0_0_0_1 = (RuleCall)cEventEventCrossReference_0_0_0.eContents().get(1);
		private final Keyword cEqualsSignGreaterThanSignKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cStateAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final CrossReference cStateStateCrossReference_0_2_0 = (CrossReference)cStateAssignment_0_2.eContents().get(0);
		private final RuleCall cStateStateIDTerminalRuleCall_0_2_0_1 = (RuleCall)cStateStateCrossReference_0_2_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cEventAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final CrossReference cEventEventCrossReference_1_0_0 = (CrossReference)cEventAssignment_1_0.eContents().get(0);
		private final RuleCall cEventEventIDTerminalRuleCall_1_0_0_1 = (RuleCall)cEventEventCrossReference_1_0_0.eContents().get(1);
		private final Keyword cSolidusKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cEventactionsAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final CrossReference cEventactionsCommandCrossReference_1_3_0 = (CrossReference)cEventactionsAssignment_1_3.eContents().get(0);
		private final RuleCall cEventactionsCommandIDTerminalRuleCall_1_3_0_1 = (RuleCall)cEventactionsCommandCrossReference_1_3_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Keyword cEqualsSignGreaterThanSignKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		private final Assignment cStateAssignment_1_6 = (Assignment)cGroup_1.eContents().get(6);
		private final CrossReference cStateStateCrossReference_1_6_0 = (CrossReference)cStateAssignment_1_6.eContents().get(0);
		private final RuleCall cStateStateIDTerminalRuleCall_1_6_0_1 = (RuleCall)cStateStateCrossReference_1_6_0.eContents().get(1);
		
		//Transition:
		//	event=[Event] "=>" state=[State] | event=[Event] "/" "[" eventactions+=[Command]+ "]" "=>" state=[State];
		public ParserRule getRule() { return rule; }

		//event=[Event] "=>" state=[State] | event=[Event] "/" "[" eventactions+=[Command]+ "]" "=>" state=[State]
		public Alternatives getAlternatives() { return cAlternatives; }

		//event=[Event] "=>" state=[State]
		public Group getGroup_0() { return cGroup_0; }

		//event=[Event]
		public Assignment getEventAssignment_0_0() { return cEventAssignment_0_0; }

		//[Event]
		public CrossReference getEventEventCrossReference_0_0_0() { return cEventEventCrossReference_0_0_0; }

		//ID
		public RuleCall getEventEventIDTerminalRuleCall_0_0_0_1() { return cEventEventIDTerminalRuleCall_0_0_0_1; }

		//"=>"
		public Keyword getEqualsSignGreaterThanSignKeyword_0_1() { return cEqualsSignGreaterThanSignKeyword_0_1; }

		//state=[State]
		public Assignment getStateAssignment_0_2() { return cStateAssignment_0_2; }

		//[State]
		public CrossReference getStateStateCrossReference_0_2_0() { return cStateStateCrossReference_0_2_0; }

		//ID
		public RuleCall getStateStateIDTerminalRuleCall_0_2_0_1() { return cStateStateIDTerminalRuleCall_0_2_0_1; }

		//event=[Event] "/" "[" eventactions+=[Command]+ "]" "=>" state=[State]
		public Group getGroup_1() { return cGroup_1; }

		//event=[Event]
		public Assignment getEventAssignment_1_0() { return cEventAssignment_1_0; }

		//[Event]
		public CrossReference getEventEventCrossReference_1_0_0() { return cEventEventCrossReference_1_0_0; }

		//ID
		public RuleCall getEventEventIDTerminalRuleCall_1_0_0_1() { return cEventEventIDTerminalRuleCall_1_0_0_1; }

		//"/"
		public Keyword getSolidusKeyword_1_1() { return cSolidusKeyword_1_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1_2() { return cLeftSquareBracketKeyword_1_2; }

		//eventactions+=[Command]+
		public Assignment getEventactionsAssignment_1_3() { return cEventactionsAssignment_1_3; }

		//[Command]
		public CrossReference getEventactionsCommandCrossReference_1_3_0() { return cEventactionsCommandCrossReference_1_3_0; }

		//ID
		public RuleCall getEventactionsCommandIDTerminalRuleCall_1_3_0_1() { return cEventactionsCommandIDTerminalRuleCall_1_3_0_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_1_4() { return cRightSquareBracketKeyword_1_4; }

		//"=>"
		public Keyword getEqualsSignGreaterThanSignKeyword_1_5() { return cEqualsSignGreaterThanSignKeyword_1_5; }

		//state=[State]
		public Assignment getStateAssignment_1_6() { return cStateAssignment_1_6; }

		//[State]
		public CrossReference getStateStateCrossReference_1_6_0() { return cStateStateCrossReference_1_6_0; }

		//ID
		public RuleCall getStateStateIDTerminalRuleCall_1_6_0_1() { return cStateStateIDTerminalRuleCall_1_6_0_1; }
	}
	
	
	private final KanbanSchedulingSystemElements pKanbanSchedulingSystem;
	private final TaskPatternElements pTaskPattern;
	private final TaskTypeElements pTaskType;
	private final ServiceElements pService;
	private final TaskElements pTask;
	private final DependencyElements pDependency;
	private final TeamElements pTeam;
	private final AssetElements pAsset;
	private final SkillElements pSkill;
	private final RequirementElements pRequirement;
	private final KanbanTaskModelElements pKanbanTaskModel;
	private final CapabilityElements pCapability;
	private final KanbanGovModelElements pKanbanGovModel;
	private final StrategyElements pStrategy;
	private final EntityElements pEntity;
	private final ProvisionElements pProvision;
	private final StatemachineElements pStatemachine;
	private final EventElements pEvent;
	private final CommandElements pCommand;
	private final StateElements pState;
	private final TransitionElements pTransition;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public KanbanmodelGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pKanbanSchedulingSystem = new KanbanSchedulingSystemElements();
		this.pTaskPattern = new TaskPatternElements();
		this.pTaskType = new TaskTypeElements();
		this.pService = new ServiceElements();
		this.pTask = new TaskElements();
		this.pDependency = new DependencyElements();
		this.pTeam = new TeamElements();
		this.pAsset = new AssetElements();
		this.pSkill = new SkillElements();
		this.pRequirement = new RequirementElements();
		this.pKanbanTaskModel = new KanbanTaskModelElements();
		this.pCapability = new CapabilityElements();
		this.pKanbanGovModel = new KanbanGovModelElements();
		this.pStrategy = new StrategyElements();
		this.pEntity = new EntityElements();
		this.pProvision = new ProvisionElements();
		this.pStatemachine = new StatemachineElements();
		this.pEvent = new EventElements();
		this.pCommand = new CommandElements();
		this.pState = new StateElements();
		this.pTransition = new TransitionElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("ausim.xtext.kanban.domainmodel.Kanbanmodel".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//KanbanSchedulingSystem:
	//	"KSSModel" name=ID "TaskPatterns" KSSTaskPatterns+=TaskPattern+ KSStaskPatternTypes+=TaskType+ "end TaskPatterns"
	//	"OrganizationModel" SoSServices+=Service+ orgUnits+=Team+ "end OrganizationModel" "WorkFlowModel" kssTasks+=Task+
	//	kssWorkFlow=KanbanTaskModel "end WorkFlowModel" "GovernanceModel" kssGovModel=KanbanGovModel? "end GovernanceModel"
	//	"end KSSModel";
	public KanbanSchedulingSystemElements getKanbanSchedulingSystemAccess() {
		return pKanbanSchedulingSystem;
	}
	
	public ParserRule getKanbanSchedulingSystemRule() {
		return getKanbanSchedulingSystemAccess().getRule();
	}

	//TaskPattern:
	//	"workflowTemplate" name=ID "{" ("Description" description=STRING)? ("Types" "{" taskpatternTypes+=[TaskType]+ "}")?
	//	"}";
	public TaskPatternElements getTaskPatternAccess() {
		return pTaskPattern;
	}
	
	public ParserRule getTaskPatternRule() {
		return getTaskPatternAccess().getRule();
	}

	//TaskType:
	//	"taskType" name=ID "{" ("Description" description=STRING)? "}";
	public TaskTypeElements getTaskTypeAccess() {
		return pTaskType;
	}
	
	public ParserRule getTaskTypeRule() {
		return getTaskTypeAccess().getRule();
	}

	//Service:
	//	"service" name=ID ("{" ("Description" description=STRING)? "}")?;
	public ServiceElements getServiceAccess() {
		return pService;
	}
	
	public ParserRule getServiceRule() {
		return getServiceAccess().getRule();
	}

	//Task:
	//	"workItem" name=ID "{" ("Description" description=STRING)? ("Pattern" pattern+=[TaskPattern])? ("Type"
	//	patternType+=[TaskType])? ("subtasks" "{" sTasks+=[Task]+ "}")? ("taskDependencies" taskDependencies+=Dependency*)?
	//	("servicesRequired" reqSpecialties+=[Service]+)? ("base efforts" befforts=INT)? ("base value" bvalue=INT)?
	//	("classOfService" COS=ID)? "}";
	public TaskElements getTaskAccess() {
		return pTask;
	}
	
	public ParserRule getTaskRule() {
		return getTaskAccess().getRule();
	}

	//Dependency:
	//	sourceTask=[Task] ("=>" | "->") targetTask=[Task];
	public DependencyElements getDependencyAccess() {
		return pDependency;
	}
	
	public ParserRule getDependencyRule() {
		return getDependencyAccess().getRule();
	}

	//Team:
	//	("team" | "group") name=ID "{" ("Description" description=STRING)? ("sourceUnits" "{" demandUnits+=[Team]+ "}")?
	//	("targetUnits" "{" sourcedUnits+=[Team]+ "}")? ("contains" "{" groupmembers+=[Team]+ "}")? ("resources" "{"
	//	resources+=Asset+ "}")? ("services" "{" services+=[Service]+ "}")? "}";
	public TeamElements getTeamAccess() {
		return pTeam;
	}
	
	public ParserRule getTeamRule() {
		return getTeamAccess().getRule();
	}

	//Asset:
	//	"resource" name=ID "{" ("Description" description=STRING)? "skills" "{" hasSkills+=Skill+ "}" "}";
	public AssetElements getAssetAccess() {
		return pAsset;
	}
	
	public ParserRule getAssetRule() {
		return getAssetAccess().getRule();
	}

	//Skill:
	//	name=ID ("{" ("Description" description=STRING)? "}")?;
	public SkillElements getSkillAccess() {
		return pSkill;
	}
	
	public ParserRule getSkillRule() {
		return getSkillAccess().getRule();
	}

	//Requirement:
	//	"requirement" name=ID "{" ("Description" description=STRING)? ("workItems" "{" rTasks+=[Task]+ "}")
	//	("workItemNetwork" dependencies+=Dependency*)? "}";
	public RequirementElements getRequirementAccess() {
		return pRequirement;
	}
	
	public ParserRule getRequirementRule() {
		return getRequirementAccess().getRule();
	}

	//KanbanTaskModel:
	//	"WorkFlow" name=ID caps+=Capability+ "end WorkFlow";
	public KanbanTaskModelElements getKanbanTaskModelAccess() {
		return pKanbanTaskModel;
	}
	
	public ParserRule getKanbanTaskModelRule() {
		return getKanbanTaskModelAccess().getRule();
	}

	//Capability:
	//	"capability" name=ID "{" ("Description" description=STRING)? reqs+=Requirement+ "}";
	public CapabilityElements getCapabilityAccess() {
		return pCapability;
	}
	
	public ParserRule getCapabilityRule() {
		return getCapabilityAccess().getRule();
	}

	//KanbanGovModel:
	//	strategy+=Strategy;
	public KanbanGovModelElements getKanbanGovModelAccess() {
		return pKanbanGovModel;
	}
	
	public ParserRule getKanbanGovModelRule() {
		return getKanbanGovModelAccess().getRule();
	}

	//Strategy:
	//	"strategy" name=ID "{" entities+=Entity* "}";
	public StrategyElements getStrategyAccess() {
		return pStrategy;
	}
	
	public ParserRule getStrategyRule() {
		return getStrategyAccess().getRule();
	}

	//Entity:
	//	"entity" name=ID "{" ("ServiceDirectory" sdname=ID "=" "[" serviceProvisions+=Provision* "]")?
	//	entityBehavior=Statemachine "}";
	public EntityElements getEntityAccess() {
		return pEntity;
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}

	//Provision:
	//	"(" serviceName=[Service] "," "{" providers+=[Team]* "}" ")";
	public ProvisionElements getProvisionAccess() {
		return pProvision;
	}
	
	public ParserRule getProvisionRule() {
		return getProvisionAccess().getRule();
	}

	//Statemachine:
	//	{Statemachine} ("events" events+=Event+ "end")? ("activities" commands+=Command+ "end")? states+=State*;
	public StatemachineElements getStatemachineAccess() {
		return pStatemachine;
	}
	
	public ParserRule getStatemachineRule() {
		return getStatemachineAccess().getRule();
	}

	//Event:
	//	name=ID code=ID;
	public EventElements getEventAccess() {
		return pEvent;
	}
	
	public ParserRule getEventRule() {
		return getEventAccess().getRule();
	}

	//Command:
	//	name=ID code=ID;
	public CommandElements getCommandAccess() {
		return pCommand;
	}
	
	public ParserRule getCommandRule() {
		return getCommandAccess().getRule();
	}

	//State:
	//	"state" name=ID ("actions" "{" actions+=[Command]+ "}")? transitions+=Transition* "end";
	public StateElements getStateAccess() {
		return pState;
	}
	
	public ParserRule getStateRule() {
		return getStateAccess().getRule();
	}

	//Transition:
	//	event=[Event] "=>" state=[State] | event=[Event] "/" "[" eventactions+=[Command]+ "]" "=>" state=[State];
	public TransitionElements getTransitionAccess() {
		return pTransition;
	}
	
	public ParserRule getTransitionRule() {
		return getTransitionAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
