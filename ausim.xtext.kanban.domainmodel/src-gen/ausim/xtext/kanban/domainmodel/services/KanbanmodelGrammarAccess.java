/*
* generated by Xtext
*/
package ausim.xtext.kanban.domainmodel.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class KanbanmodelGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class KanbanSchedulingSystemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "KanbanSchedulingSystem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cKSSModelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cOrganizationModelKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOrgUnitsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOrgUnitsTeamParserRuleCall_3_0 = (RuleCall)cOrgUnitsAssignment_3.eContents().get(0);
		private final Keyword cEndOrganizationModelKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cWorkFlowModelKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cKssTasksAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cKssTasksTaskParserRuleCall_6_0 = (RuleCall)cKssTasksAssignment_6.eContents().get(0);
		private final Assignment cKssWorkFlowAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cKssWorkFlowKanbanTaskModelParserRuleCall_7_0 = (RuleCall)cKssWorkFlowAssignment_7.eContents().get(0);
		private final Keyword cEndWorkFlowModelKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cGovernanceModelKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cKssGovModelAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cKssGovModelKanbanGovModelParserRuleCall_10_0 = (RuleCall)cKssGovModelAssignment_10.eContents().get(0);
		private final Keyword cEndGovernanceModelKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cEndKSSModelKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//KanbanSchedulingSystem:
		//	"KSSModel" name=ID "OrganizationModel" orgUnits+=Team+ "end OrganizationModel" "WorkFlowModel" kssTasks+=Task+
		//	kssWorkFlow=KanbanTaskModel "end WorkFlowModel" "GovernanceModel" kssGovModel=KanbanGovModel "end GovernanceModel"
		//	"end KSSModel";
		public ParserRule getRule() { return rule; }

		//"KSSModel" name=ID "OrganizationModel" orgUnits+=Team+ "end OrganizationModel" "WorkFlowModel" kssTasks+=Task+
		//kssWorkFlow=KanbanTaskModel "end WorkFlowModel" "GovernanceModel" kssGovModel=KanbanGovModel "end GovernanceModel"
		//"end KSSModel"
		public Group getGroup() { return cGroup; }

		//"KSSModel"
		public Keyword getKSSModelKeyword_0() { return cKSSModelKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"OrganizationModel"
		public Keyword getOrganizationModelKeyword_2() { return cOrganizationModelKeyword_2; }

		//orgUnits+=Team+
		public Assignment getOrgUnitsAssignment_3() { return cOrgUnitsAssignment_3; }

		//Team
		public RuleCall getOrgUnitsTeamParserRuleCall_3_0() { return cOrgUnitsTeamParserRuleCall_3_0; }

		//"end OrganizationModel"
		public Keyword getEndOrganizationModelKeyword_4() { return cEndOrganizationModelKeyword_4; }

		//"WorkFlowModel"
		public Keyword getWorkFlowModelKeyword_5() { return cWorkFlowModelKeyword_5; }

		//kssTasks+=Task+
		public Assignment getKssTasksAssignment_6() { return cKssTasksAssignment_6; }

		//Task
		public RuleCall getKssTasksTaskParserRuleCall_6_0() { return cKssTasksTaskParserRuleCall_6_0; }

		//kssWorkFlow=KanbanTaskModel
		public Assignment getKssWorkFlowAssignment_7() { return cKssWorkFlowAssignment_7; }

		//KanbanTaskModel
		public RuleCall getKssWorkFlowKanbanTaskModelParserRuleCall_7_0() { return cKssWorkFlowKanbanTaskModelParserRuleCall_7_0; }

		//"end WorkFlowModel"
		public Keyword getEndWorkFlowModelKeyword_8() { return cEndWorkFlowModelKeyword_8; }

		//"GovernanceModel"
		public Keyword getGovernanceModelKeyword_9() { return cGovernanceModelKeyword_9; }

		//kssGovModel=KanbanGovModel
		public Assignment getKssGovModelAssignment_10() { return cKssGovModelAssignment_10; }

		//KanbanGovModel
		public RuleCall getKssGovModelKanbanGovModelParserRuleCall_10_0() { return cKssGovModelKanbanGovModelParserRuleCall_10_0; }

		//"end GovernanceModel"
		public Keyword getEndGovernanceModelKeyword_11() { return cEndGovernanceModelKeyword_11; }

		//"end KSSModel"
		public Keyword getEndKSSModelKeyword_12() { return cEndKSSModelKeyword_12; }
	}

	public class TeamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Team");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cTeamKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cGroupKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSourceUnitsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cDemandUnitsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final CrossReference cDemandUnitsTeamCrossReference_3_2_0 = (CrossReference)cDemandUnitsAssignment_3_2.eContents().get(0);
		private final RuleCall cDemandUnitsTeamIDTerminalRuleCall_3_2_0_1 = (RuleCall)cDemandUnitsTeamCrossReference_3_2_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTargetUnitsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cSourcedUnitsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final CrossReference cSourcedUnitsTeamCrossReference_4_2_0 = (CrossReference)cSourcedUnitsAssignment_4_2.eContents().get(0);
		private final RuleCall cSourcedUnitsTeamIDTerminalRuleCall_4_2_0_1 = (RuleCall)cSourcedUnitsTeamCrossReference_4_2_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cContainsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cGroupmembersAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final CrossReference cGroupmembersTeamCrossReference_5_2_0 = (CrossReference)cGroupmembersAssignment_5_2.eContents().get(0);
		private final RuleCall cGroupmembersTeamIDTerminalRuleCall_5_2_0_1 = (RuleCall)cGroupmembersTeamCrossReference_5_2_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cResourcesKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cResourcesAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cResourcesAssetParserRuleCall_6_2_0 = (RuleCall)cResourcesAssignment_6_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cServicesKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cServicesAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cServicesServiceParserRuleCall_7_2_0 = (RuleCall)cServicesAssignment_7_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Team:
		//	("team" | "group") name=ID "{" ("sourceUnits" "{" demandUnits+=[Team]+ "}")? ("targetUnits" "{" sourcedUnits+=[Team]+
		//	"}")? ("contains" "{" groupmembers+=[Team]+ "}")? ("resources" "{" resources+=Asset+ "}")? ("services" "{"
		//	services+=Service+ "}")? "}";
		public ParserRule getRule() { return rule; }

		//("team" | "group") name=ID "{" ("sourceUnits" "{" demandUnits+=[Team]+ "}")? ("targetUnits" "{" sourcedUnits+=[Team]+
		//"}")? ("contains" "{" groupmembers+=[Team]+ "}")? ("resources" "{" resources+=Asset+ "}")? ("services" "{"
		//services+=Service+ "}")? "}"
		public Group getGroup() { return cGroup; }

		//"team" | "group"
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//"team"
		public Keyword getTeamKeyword_0_0() { return cTeamKeyword_0_0; }

		//"group"
		public Keyword getGroupKeyword_0_1() { return cGroupKeyword_0_1; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("sourceUnits" "{" demandUnits+=[Team]+ "}")?
		public Group getGroup_3() { return cGroup_3; }

		//"sourceUnits"
		public Keyword getSourceUnitsKeyword_3_0() { return cSourceUnitsKeyword_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }

		//demandUnits+=[Team]+
		public Assignment getDemandUnitsAssignment_3_2() { return cDemandUnitsAssignment_3_2; }

		//[Team]
		public CrossReference getDemandUnitsTeamCrossReference_3_2_0() { return cDemandUnitsTeamCrossReference_3_2_0; }

		//ID
		public RuleCall getDemandUnitsTeamIDTerminalRuleCall_3_2_0_1() { return cDemandUnitsTeamIDTerminalRuleCall_3_2_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3_3() { return cRightCurlyBracketKeyword_3_3; }

		//("targetUnits" "{" sourcedUnits+=[Team]+ "}")?
		public Group getGroup_4() { return cGroup_4; }

		//"targetUnits"
		public Keyword getTargetUnitsKeyword_4_0() { return cTargetUnitsKeyword_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }

		//sourcedUnits+=[Team]+
		public Assignment getSourcedUnitsAssignment_4_2() { return cSourcedUnitsAssignment_4_2; }

		//[Team]
		public CrossReference getSourcedUnitsTeamCrossReference_4_2_0() { return cSourcedUnitsTeamCrossReference_4_2_0; }

		//ID
		public RuleCall getSourcedUnitsTeamIDTerminalRuleCall_4_2_0_1() { return cSourcedUnitsTeamIDTerminalRuleCall_4_2_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_3() { return cRightCurlyBracketKeyword_4_3; }

		//("contains" "{" groupmembers+=[Team]+ "}")?
		public Group getGroup_5() { return cGroup_5; }

		//"contains"
		public Keyword getContainsKeyword_5_0() { return cContainsKeyword_5_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }

		//groupmembers+=[Team]+
		public Assignment getGroupmembersAssignment_5_2() { return cGroupmembersAssignment_5_2; }

		//[Team]
		public CrossReference getGroupmembersTeamCrossReference_5_2_0() { return cGroupmembersTeamCrossReference_5_2_0; }

		//ID
		public RuleCall getGroupmembersTeamIDTerminalRuleCall_5_2_0_1() { return cGroupmembersTeamIDTerminalRuleCall_5_2_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5_3() { return cRightCurlyBracketKeyword_5_3; }

		//("resources" "{" resources+=Asset+ "}")?
		public Group getGroup_6() { return cGroup_6; }

		//"resources"
		public Keyword getResourcesKeyword_6_0() { return cResourcesKeyword_6_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }

		//resources+=Asset+
		public Assignment getResourcesAssignment_6_2() { return cResourcesAssignment_6_2; }

		//Asset
		public RuleCall getResourcesAssetParserRuleCall_6_2_0() { return cResourcesAssetParserRuleCall_6_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6_3() { return cRightCurlyBracketKeyword_6_3; }

		//("services" "{" services+=Service+ "}")?
		public Group getGroup_7() { return cGroup_7; }

		//"services"
		public Keyword getServicesKeyword_7_0() { return cServicesKeyword_7_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }

		//services+=Service+
		public Assignment getServicesAssignment_7_2() { return cServicesAssignment_7_2; }

		//Service
		public RuleCall getServicesServiceParserRuleCall_7_2_0() { return cServicesServiceParserRuleCall_7_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7_3() { return cRightCurlyBracketKeyword_7_3; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class ServiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Service");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cServiceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Service:
		//	"service" name=ID;
		public ParserRule getRule() { return rule; }

		//"service" name=ID
		public Group getGroup() { return cGroup; }

		//"service"
		public Keyword getServiceKeyword_0() { return cServiceKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class AssetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Asset");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cResourceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cSkillsKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cHasSkillsAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cHasSkillsSkillParserRuleCall_2_3_0 = (RuleCall)cHasSkillsAssignment_2_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_2_5 = (Keyword)cGroup_2.eContents().get(5);
		
		//Asset:
		//	"resource" name=ID ("{" "skills" "{" hasSkills+=Skill+ "}" "}")?;
		public ParserRule getRule() { return rule; }

		//"resource" name=ID ("{" "skills" "{" hasSkills+=Skill+ "}" "}")?
		public Group getGroup() { return cGroup; }

		//"resource"
		public Keyword getResourceKeyword_0() { return cResourceKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("{" "skills" "{" hasSkills+=Skill+ "}" "}")?
		public Group getGroup_2() { return cGroup_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }

		//"skills"
		public Keyword getSkillsKeyword_2_1() { return cSkillsKeyword_2_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_2() { return cLeftCurlyBracketKeyword_2_2; }

		//hasSkills+=Skill+
		public Assignment getHasSkillsAssignment_2_3() { return cHasSkillsAssignment_2_3; }

		//Skill
		public RuleCall getHasSkillsSkillParserRuleCall_2_3_0() { return cHasSkillsSkillParserRuleCall_2_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_4() { return cRightCurlyBracketKeyword_2_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_5() { return cRightCurlyBracketKeyword_2_5; }
	}

	public class SkillElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Skill");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Skill:
		//	name=ID;
		public ParserRule getRule() { return rule; }

		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}

	public class DependencyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Dependency");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSourceTaskAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cSourceTaskTaskCrossReference_0_0 = (CrossReference)cSourceTaskAssignment_0.eContents().get(0);
		private final RuleCall cSourceTaskTaskIDTerminalRuleCall_0_0_1 = (RuleCall)cSourceTaskTaskCrossReference_0_0.eContents().get(1);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Keyword cEqualsSignGreaterThanSignKeyword_1_0 = (Keyword)cAlternatives_1.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		private final Assignment cTargetTaskAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTargetTaskTaskCrossReference_2_0 = (CrossReference)cTargetTaskAssignment_2.eContents().get(0);
		private final RuleCall cTargetTaskTaskIDTerminalRuleCall_2_0_1 = (RuleCall)cTargetTaskTaskCrossReference_2_0.eContents().get(1);
		
		//Dependency:
		//	sourceTask=[Task] ("=>" | "->") targetTask=[Task];
		public ParserRule getRule() { return rule; }

		//sourceTask=[Task] ("=>" | "->") targetTask=[Task]
		public Group getGroup() { return cGroup; }

		//sourceTask=[Task]
		public Assignment getSourceTaskAssignment_0() { return cSourceTaskAssignment_0; }

		//[Task]
		public CrossReference getSourceTaskTaskCrossReference_0_0() { return cSourceTaskTaskCrossReference_0_0; }

		//ID
		public RuleCall getSourceTaskTaskIDTerminalRuleCall_0_0_1() { return cSourceTaskTaskIDTerminalRuleCall_0_0_1; }

		//"=>" | "->"
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//"=>"
		public Keyword getEqualsSignGreaterThanSignKeyword_1_0() { return cEqualsSignGreaterThanSignKeyword_1_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1_1() { return cHyphenMinusGreaterThanSignKeyword_1_1; }

		//targetTask=[Task]
		public Assignment getTargetTaskAssignment_2() { return cTargetTaskAssignment_2; }

		//[Task]
		public CrossReference getTargetTaskTaskCrossReference_2_0() { return cTargetTaskTaskCrossReference_2_0; }

		//ID
		public RuleCall getTargetTaskTaskIDTerminalRuleCall_2_0_1() { return cTargetTaskTaskIDTerminalRuleCall_2_0_1; }
	}

	public class RequirementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Requirement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRequirementKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cWorkItemsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cRTasksAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final CrossReference cRTasksTaskCrossReference_3_2_0 = (CrossReference)cRTasksAssignment_3_2.eContents().get(0);
		private final RuleCall cRTasksTaskIDTerminalRuleCall_3_2_0_1 = (RuleCall)cRTasksTaskCrossReference_3_2_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cWorkItemNetworkKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDependenciesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDependenciesDependencyParserRuleCall_4_1_0 = (RuleCall)cDependenciesAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Requirement:
		//	"requirement" name=ID "{" ("workItems" "{" rTasks+=[Task]+ "}") ("workItemNetwork" dependencies+=Dependency*)? "}";
		public ParserRule getRule() { return rule; }

		//"requirement" name=ID "{" ("workItems" "{" rTasks+=[Task]+ "}") ("workItemNetwork" dependencies+=Dependency*)? "}"
		public Group getGroup() { return cGroup; }

		//"requirement"
		public Keyword getRequirementKeyword_0() { return cRequirementKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"workItems" "{" rTasks+=[Task]+ "}"
		public Group getGroup_3() { return cGroup_3; }

		//"workItems"
		public Keyword getWorkItemsKeyword_3_0() { return cWorkItemsKeyword_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }

		//rTasks+=[Task]+
		public Assignment getRTasksAssignment_3_2() { return cRTasksAssignment_3_2; }

		//[Task]
		public CrossReference getRTasksTaskCrossReference_3_2_0() { return cRTasksTaskCrossReference_3_2_0; }

		//ID
		public RuleCall getRTasksTaskIDTerminalRuleCall_3_2_0_1() { return cRTasksTaskIDTerminalRuleCall_3_2_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3_3() { return cRightCurlyBracketKeyword_3_3; }

		//("workItemNetwork" dependencies+=Dependency*)?
		public Group getGroup_4() { return cGroup_4; }

		//"workItemNetwork"
		public Keyword getWorkItemNetworkKeyword_4_0() { return cWorkItemNetworkKeyword_4_0; }

		//dependencies+=Dependency*
		public Assignment getDependenciesAssignment_4_1() { return cDependenciesAssignment_4_1; }

		//Dependency
		public RuleCall getDependenciesDependencyParserRuleCall_4_1_0() { return cDependenciesDependencyParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class TaskElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Task");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWorkItemKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSubtasksKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cSTasksAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final CrossReference cSTasksTaskCrossReference_3_2_0 = (CrossReference)cSTasksAssignment_3_2.eContents().get(0);
		private final RuleCall cSTasksTaskIDTerminalRuleCall_3_2_0_1 = (RuleCall)cSTasksTaskCrossReference_3_2_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTaskDependenciesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTaskDependenciesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTaskDependenciesDependencyParserRuleCall_4_1_0 = (RuleCall)cTaskDependenciesAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cServicesRequiredKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cReqSpecialtiesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cReqSpecialtiesServiceCrossReference_5_1_0 = (CrossReference)cReqSpecialtiesAssignment_5_1.eContents().get(0);
		private final RuleCall cReqSpecialtiesServiceIDTerminalRuleCall_5_1_0_1 = (RuleCall)cReqSpecialtiesServiceCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cBaseValueKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cBvalueAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cBvalueINTTerminalRuleCall_6_1_0 = (RuleCall)cBvalueAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cClassOfServiceKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cCOSAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cCOSIDTerminalRuleCall_7_1_0 = (RuleCall)cCOSAssignment_7_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Task:
		//	"workItem" name=ID "{" ("subtasks" "{" sTasks+=[Task]+ "}")? ("taskDependencies" taskDependencies+=Dependency*)?
		//	("servicesRequired" reqSpecialties+=[Service]+)? ("base value" bvalue=INT)? ("classOfService" COS=ID)? "}";
		public ParserRule getRule() { return rule; }

		//"workItem" name=ID "{" ("subtasks" "{" sTasks+=[Task]+ "}")? ("taskDependencies" taskDependencies+=Dependency*)?
		//("servicesRequired" reqSpecialties+=[Service]+)? ("base value" bvalue=INT)? ("classOfService" COS=ID)? "}"
		public Group getGroup() { return cGroup; }

		//"workItem"
		public Keyword getWorkItemKeyword_0() { return cWorkItemKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("subtasks" "{" sTasks+=[Task]+ "}")?
		public Group getGroup_3() { return cGroup_3; }

		//"subtasks"
		public Keyword getSubtasksKeyword_3_0() { return cSubtasksKeyword_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }

		//sTasks+=[Task]+
		public Assignment getSTasksAssignment_3_2() { return cSTasksAssignment_3_2; }

		//[Task]
		public CrossReference getSTasksTaskCrossReference_3_2_0() { return cSTasksTaskCrossReference_3_2_0; }

		//ID
		public RuleCall getSTasksTaskIDTerminalRuleCall_3_2_0_1() { return cSTasksTaskIDTerminalRuleCall_3_2_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3_3() { return cRightCurlyBracketKeyword_3_3; }

		//("taskDependencies" taskDependencies+=Dependency*)?
		public Group getGroup_4() { return cGroup_4; }

		//"taskDependencies"
		public Keyword getTaskDependenciesKeyword_4_0() { return cTaskDependenciesKeyword_4_0; }

		//taskDependencies+=Dependency*
		public Assignment getTaskDependenciesAssignment_4_1() { return cTaskDependenciesAssignment_4_1; }

		//Dependency
		public RuleCall getTaskDependenciesDependencyParserRuleCall_4_1_0() { return cTaskDependenciesDependencyParserRuleCall_4_1_0; }

		//("servicesRequired" reqSpecialties+=[Service]+)?
		public Group getGroup_5() { return cGroup_5; }

		//"servicesRequired"
		public Keyword getServicesRequiredKeyword_5_0() { return cServicesRequiredKeyword_5_0; }

		//reqSpecialties+=[Service]+
		public Assignment getReqSpecialtiesAssignment_5_1() { return cReqSpecialtiesAssignment_5_1; }

		//[Service]
		public CrossReference getReqSpecialtiesServiceCrossReference_5_1_0() { return cReqSpecialtiesServiceCrossReference_5_1_0; }

		//ID
		public RuleCall getReqSpecialtiesServiceIDTerminalRuleCall_5_1_0_1() { return cReqSpecialtiesServiceIDTerminalRuleCall_5_1_0_1; }

		//("base value" bvalue=INT)?
		public Group getGroup_6() { return cGroup_6; }

		//"base value"
		public Keyword getBaseValueKeyword_6_0() { return cBaseValueKeyword_6_0; }

		//bvalue=INT
		public Assignment getBvalueAssignment_6_1() { return cBvalueAssignment_6_1; }

		//INT
		public RuleCall getBvalueINTTerminalRuleCall_6_1_0() { return cBvalueINTTerminalRuleCall_6_1_0; }

		//("classOfService" COS=ID)?
		public Group getGroup_7() { return cGroup_7; }

		//"classOfService"
		public Keyword getClassOfServiceKeyword_7_0() { return cClassOfServiceKeyword_7_0; }

		//COS=ID
		public Assignment getCOSAssignment_7_1() { return cCOSAssignment_7_1; }

		//ID
		public RuleCall getCOSIDTerminalRuleCall_7_1_0() { return cCOSIDTerminalRuleCall_7_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class KanbanTaskModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "KanbanTaskModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWorkFlowKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cCapsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCapsCapabilityParserRuleCall_2_0 = (RuleCall)cCapsAssignment_2.eContents().get(0);
		private final Keyword cEndWorkFlowKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//KanbanTaskModel:
		//	"WorkFlow" name=ID caps+=Capability+ "end WorkFlow";
		public ParserRule getRule() { return rule; }

		//"WorkFlow" name=ID caps+=Capability+ "end WorkFlow"
		public Group getGroup() { return cGroup; }

		//"WorkFlow"
		public Keyword getWorkFlowKeyword_0() { return cWorkFlowKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//caps+=Capability+
		public Assignment getCapsAssignment_2() { return cCapsAssignment_2; }

		//Capability
		public RuleCall getCapsCapabilityParserRuleCall_2_0() { return cCapsCapabilityParserRuleCall_2_0; }

		//"end WorkFlow"
		public Keyword getEndWorkFlowKeyword_3() { return cEndWorkFlowKeyword_3; }
	}

	public class CapabilityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Capability");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCapabilityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cReqsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cReqsRequirementParserRuleCall_3_0 = (RuleCall)cReqsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Capability:
		//	"capability" name=ID "{" reqs+=Requirement+ "}";
		public ParserRule getRule() { return rule; }

		//"capability" name=ID "{" reqs+=Requirement+ "}"
		public Group getGroup() { return cGroup; }

		//"capability"
		public Keyword getCapabilityKeyword_0() { return cCapabilityKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//reqs+=Requirement+
		public Assignment getReqsAssignment_3() { return cReqsAssignment_3; }

		//Requirement
		public RuleCall getReqsRequirementParserRuleCall_3_0() { return cReqsRequirementParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class KanbanGovModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "KanbanGovModel");
		private final Assignment cStrategyAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cStrategyStrategyParserRuleCall_0 = (RuleCall)cStrategyAssignment.eContents().get(0);
		
		//KanbanGovModel:
		//	strategy+=Strategy;
		public ParserRule getRule() { return rule; }

		//strategy+=Strategy
		public Assignment getStrategyAssignment() { return cStrategyAssignment; }

		//Strategy
		public RuleCall getStrategyStrategyParserRuleCall_0() { return cStrategyStrategyParserRuleCall_0; }
	}

	public class StrategyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Strategy");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStrategyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEntitiesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEntitiesEntityParserRuleCall_3_0 = (RuleCall)cEntitiesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Strategy:
		//	"strategy" name=ID "{" entities+=Entity* "}";
		public ParserRule getRule() { return rule; }

		//"strategy" name=ID "{" entities+=Entity* "}"
		public Group getGroup() { return cGroup; }

		//"strategy"
		public Keyword getStrategyKeyword_0() { return cStrategyKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//entities+=Entity*
		public Assignment getEntitiesAssignment_3() { return cEntitiesAssignment_3; }

		//Entity
		public RuleCall getEntitiesEntityParserRuleCall_3_0() { return cEntitiesEntityParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Entity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEntityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cServiceDirectoryKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSdnameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cSdnameIDTerminalRuleCall_3_1_0 = (RuleCall)cSdnameAssignment_3_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Assignment cServiceProvisionsAssignment_3_4 = (Assignment)cGroup_3.eContents().get(4);
		private final RuleCall cServiceProvisionsProvisionParserRuleCall_3_4_0 = (RuleCall)cServiceProvisionsAssignment_3_4.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_5 = (Keyword)cGroup_3.eContents().get(5);
		private final Assignment cEntityBehaviorAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cEntityBehaviorStatemachineParserRuleCall_4_0 = (RuleCall)cEntityBehaviorAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Entity:
		//	"entity" name=ID "{" ("ServiceDirectory" sdname=ID "=" "[" serviceProvisions+=Provision* "]")?
		//	entityBehavior=Statemachine "}";
		public ParserRule getRule() { return rule; }

		//"entity" name=ID "{" ("ServiceDirectory" sdname=ID "=" "[" serviceProvisions+=Provision* "]")?
		//entityBehavior=Statemachine "}"
		public Group getGroup() { return cGroup; }

		//"entity"
		public Keyword getEntityKeyword_0() { return cEntityKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("ServiceDirectory" sdname=ID "=" "[" serviceProvisions+=Provision* "]")?
		public Group getGroup_3() { return cGroup_3; }

		//"ServiceDirectory"
		public Keyword getServiceDirectoryKeyword_3_0() { return cServiceDirectoryKeyword_3_0; }

		//sdname=ID
		public Assignment getSdnameAssignment_3_1() { return cSdnameAssignment_3_1; }

		//ID
		public RuleCall getSdnameIDTerminalRuleCall_3_1_0() { return cSdnameIDTerminalRuleCall_3_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_3_2() { return cEqualsSignKeyword_3_2; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3_3() { return cLeftSquareBracketKeyword_3_3; }

		//serviceProvisions+=Provision*
		public Assignment getServiceProvisionsAssignment_3_4() { return cServiceProvisionsAssignment_3_4; }

		//Provision
		public RuleCall getServiceProvisionsProvisionParserRuleCall_3_4_0() { return cServiceProvisionsProvisionParserRuleCall_3_4_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3_5() { return cRightSquareBracketKeyword_3_5; }

		//entityBehavior=Statemachine
		public Assignment getEntityBehaviorAssignment_4() { return cEntityBehaviorAssignment_4; }

		//Statemachine
		public RuleCall getEntityBehaviorStatemachineParserRuleCall_4_0() { return cEntityBehaviorStatemachineParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ProvisionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Provision");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cServiceNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cServiceNameServiceCrossReference_1_0 = (CrossReference)cServiceNameAssignment_1.eContents().get(0);
		private final RuleCall cServiceNameServiceIDTerminalRuleCall_1_0_1 = (RuleCall)cServiceNameServiceCrossReference_1_0.eContents().get(1);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cProvidersAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cProvidersTeamCrossReference_4_0 = (CrossReference)cProvidersAssignment_4.eContents().get(0);
		private final RuleCall cProvidersTeamIDTerminalRuleCall_4_0_1 = (RuleCall)cProvidersTeamCrossReference_4_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Provision:
		//	"(" serviceName=[Service] "," "{" providers+=[Team]* "}" ")";
		public ParserRule getRule() { return rule; }

		//"(" serviceName=[Service] "," "{" providers+=[Team]* "}" ")"
		public Group getGroup() { return cGroup; }

		//"("
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }

		//serviceName=[Service]
		public Assignment getServiceNameAssignment_1() { return cServiceNameAssignment_1; }

		//[Service]
		public CrossReference getServiceNameServiceCrossReference_1_0() { return cServiceNameServiceCrossReference_1_0; }

		//ID
		public RuleCall getServiceNameServiceIDTerminalRuleCall_1_0_1() { return cServiceNameServiceIDTerminalRuleCall_1_0_1; }

		//","
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//providers+=[Team]*
		public Assignment getProvidersAssignment_4() { return cProvidersAssignment_4; }

		//[Team]
		public CrossReference getProvidersTeamCrossReference_4_0() { return cProvidersTeamCrossReference_4_0; }

		//ID
		public RuleCall getProvidersTeamIDTerminalRuleCall_4_0_1() { return cProvidersTeamIDTerminalRuleCall_4_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }

		//")"
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}

	public class StatemachineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Statemachine");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cStatemachineAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cEventsKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cEventsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cEventsEventParserRuleCall_1_1_0 = (RuleCall)cEventsAssignment_1_1.eContents().get(0);
		private final Keyword cEndKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cActivitiesKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cCommandsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cCommandsCommandParserRuleCall_2_1_0 = (RuleCall)cCommandsAssignment_2_1.eContents().get(0);
		private final Keyword cEndKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cStatesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cStatesStateParserRuleCall_3_0 = (RuleCall)cStatesAssignment_3.eContents().get(0);
		
		//Statemachine:
		//	{Statemachine} ("events" events+=Event+ "end")? ("activities" commands+=Command+ "end")? states+=State*;
		public ParserRule getRule() { return rule; }

		//{Statemachine} ("events" events+=Event+ "end")? ("activities" commands+=Command+ "end")? states+=State*
		public Group getGroup() { return cGroup; }

		//{Statemachine}
		public Action getStatemachineAction_0() { return cStatemachineAction_0; }

		//("events" events+=Event+ "end")?
		public Group getGroup_1() { return cGroup_1; }

		//"events"
		public Keyword getEventsKeyword_1_0() { return cEventsKeyword_1_0; }

		//events+=Event+
		public Assignment getEventsAssignment_1_1() { return cEventsAssignment_1_1; }

		//Event
		public RuleCall getEventsEventParserRuleCall_1_1_0() { return cEventsEventParserRuleCall_1_1_0; }

		//"end"
		public Keyword getEndKeyword_1_2() { return cEndKeyword_1_2; }

		//("activities" commands+=Command+ "end")?
		public Group getGroup_2() { return cGroup_2; }

		//"activities"
		public Keyword getActivitiesKeyword_2_0() { return cActivitiesKeyword_2_0; }

		//commands+=Command+
		public Assignment getCommandsAssignment_2_1() { return cCommandsAssignment_2_1; }

		//Command
		public RuleCall getCommandsCommandParserRuleCall_2_1_0() { return cCommandsCommandParserRuleCall_2_1_0; }

		//"end"
		public Keyword getEndKeyword_2_2() { return cEndKeyword_2_2; }

		//states+=State*
		public Assignment getStatesAssignment_3() { return cStatesAssignment_3; }

		//State
		public RuleCall getStatesStateParserRuleCall_3_0() { return cStatesStateParserRuleCall_3_0; }
	}

	public class EventElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Event");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cCodeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCodeIDTerminalRuleCall_1_0 = (RuleCall)cCodeAssignment_1.eContents().get(0);
		
		//Event:
		//	name=ID code=ID;
		public ParserRule getRule() { return rule; }

		//name=ID code=ID
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//code=ID
		public Assignment getCodeAssignment_1() { return cCodeAssignment_1; }

		//ID
		public RuleCall getCodeIDTerminalRuleCall_1_0() { return cCodeIDTerminalRuleCall_1_0; }
	}

	public class CommandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Command");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cCodeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCodeIDTerminalRuleCall_1_0 = (RuleCall)cCodeAssignment_1.eContents().get(0);
		
		//Command:
		//	name=ID code=ID;
		public ParserRule getRule() { return rule; }

		//name=ID code=ID
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//code=ID
		public Assignment getCodeAssignment_1() { return cCodeAssignment_1; }

		//ID
		public RuleCall getCodeIDTerminalRuleCall_1_0() { return cCodeIDTerminalRuleCall_1_0; }
	}

	public class StateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "State");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStateKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cActionsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cActionsAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final CrossReference cActionsCommandCrossReference_2_2_0 = (CrossReference)cActionsAssignment_2_2.eContents().get(0);
		private final RuleCall cActionsCommandIDTerminalRuleCall_2_2_0_1 = (RuleCall)cActionsCommandCrossReference_2_2_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Assignment cTransitionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTransitionsTransitionParserRuleCall_3_0 = (RuleCall)cTransitionsAssignment_3.eContents().get(0);
		private final Keyword cEndKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//State:
		//	"state" name=ID ("actions" "{" actions+=[Command]+ "}")? transitions+=Transition* "end";
		public ParserRule getRule() { return rule; }

		//"state" name=ID ("actions" "{" actions+=[Command]+ "}")? transitions+=Transition* "end"
		public Group getGroup() { return cGroup; }

		//"state"
		public Keyword getStateKeyword_0() { return cStateKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("actions" "{" actions+=[Command]+ "}")?
		public Group getGroup_2() { return cGroup_2; }

		//"actions"
		public Keyword getActionsKeyword_2_0() { return cActionsKeyword_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_1() { return cLeftCurlyBracketKeyword_2_1; }

		//actions+=[Command]+
		public Assignment getActionsAssignment_2_2() { return cActionsAssignment_2_2; }

		//[Command]
		public CrossReference getActionsCommandCrossReference_2_2_0() { return cActionsCommandCrossReference_2_2_0; }

		//ID
		public RuleCall getActionsCommandIDTerminalRuleCall_2_2_0_1() { return cActionsCommandIDTerminalRuleCall_2_2_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_3() { return cRightCurlyBracketKeyword_2_3; }

		//transitions+=Transition*
		public Assignment getTransitionsAssignment_3() { return cTransitionsAssignment_3; }

		//Transition
		public RuleCall getTransitionsTransitionParserRuleCall_3_0() { return cTransitionsTransitionParserRuleCall_3_0; }

		//"end"
		public Keyword getEndKeyword_4() { return cEndKeyword_4; }
	}

	public class TransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Transition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cEventAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final CrossReference cEventEventCrossReference_0_0_0 = (CrossReference)cEventAssignment_0_0.eContents().get(0);
		private final RuleCall cEventEventIDTerminalRuleCall_0_0_0_1 = (RuleCall)cEventEventCrossReference_0_0_0.eContents().get(1);
		private final Keyword cEqualsSignGreaterThanSignKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cStateAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final CrossReference cStateStateCrossReference_0_2_0 = (CrossReference)cStateAssignment_0_2.eContents().get(0);
		private final RuleCall cStateStateIDTerminalRuleCall_0_2_0_1 = (RuleCall)cStateStateCrossReference_0_2_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cEventAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final CrossReference cEventEventCrossReference_1_0_0 = (CrossReference)cEventAssignment_1_0.eContents().get(0);
		private final RuleCall cEventEventIDTerminalRuleCall_1_0_0_1 = (RuleCall)cEventEventCrossReference_1_0_0.eContents().get(1);
		private final Keyword cSolidusKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cEventactionsAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final CrossReference cEventactionsCommandCrossReference_1_3_0 = (CrossReference)cEventactionsAssignment_1_3.eContents().get(0);
		private final RuleCall cEventactionsCommandIDTerminalRuleCall_1_3_0_1 = (RuleCall)cEventactionsCommandCrossReference_1_3_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Keyword cEqualsSignGreaterThanSignKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		private final Assignment cStateAssignment_1_6 = (Assignment)cGroup_1.eContents().get(6);
		private final CrossReference cStateStateCrossReference_1_6_0 = (CrossReference)cStateAssignment_1_6.eContents().get(0);
		private final RuleCall cStateStateIDTerminalRuleCall_1_6_0_1 = (RuleCall)cStateStateCrossReference_1_6_0.eContents().get(1);
		
		//Transition:
		//	event=[Event] "=>" state=[State] | event=[Event] "/" "[" eventactions+=[Command]+ "]" "=>" state=[State];
		public ParserRule getRule() { return rule; }

		//event=[Event] "=>" state=[State] | event=[Event] "/" "[" eventactions+=[Command]+ "]" "=>" state=[State]
		public Alternatives getAlternatives() { return cAlternatives; }

		//event=[Event] "=>" state=[State]
		public Group getGroup_0() { return cGroup_0; }

		//event=[Event]
		public Assignment getEventAssignment_0_0() { return cEventAssignment_0_0; }

		//[Event]
		public CrossReference getEventEventCrossReference_0_0_0() { return cEventEventCrossReference_0_0_0; }

		//ID
		public RuleCall getEventEventIDTerminalRuleCall_0_0_0_1() { return cEventEventIDTerminalRuleCall_0_0_0_1; }

		//"=>"
		public Keyword getEqualsSignGreaterThanSignKeyword_0_1() { return cEqualsSignGreaterThanSignKeyword_0_1; }

		//state=[State]
		public Assignment getStateAssignment_0_2() { return cStateAssignment_0_2; }

		//[State]
		public CrossReference getStateStateCrossReference_0_2_0() { return cStateStateCrossReference_0_2_0; }

		//ID
		public RuleCall getStateStateIDTerminalRuleCall_0_2_0_1() { return cStateStateIDTerminalRuleCall_0_2_0_1; }

		//event=[Event] "/" "[" eventactions+=[Command]+ "]" "=>" state=[State]
		public Group getGroup_1() { return cGroup_1; }

		//event=[Event]
		public Assignment getEventAssignment_1_0() { return cEventAssignment_1_0; }

		//[Event]
		public CrossReference getEventEventCrossReference_1_0_0() { return cEventEventCrossReference_1_0_0; }

		//ID
		public RuleCall getEventEventIDTerminalRuleCall_1_0_0_1() { return cEventEventIDTerminalRuleCall_1_0_0_1; }

		//"/"
		public Keyword getSolidusKeyword_1_1() { return cSolidusKeyword_1_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1_2() { return cLeftSquareBracketKeyword_1_2; }

		//eventactions+=[Command]+
		public Assignment getEventactionsAssignment_1_3() { return cEventactionsAssignment_1_3; }

		//[Command]
		public CrossReference getEventactionsCommandCrossReference_1_3_0() { return cEventactionsCommandCrossReference_1_3_0; }

		//ID
		public RuleCall getEventactionsCommandIDTerminalRuleCall_1_3_0_1() { return cEventactionsCommandIDTerminalRuleCall_1_3_0_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_1_4() { return cRightSquareBracketKeyword_1_4; }

		//"=>"
		public Keyword getEqualsSignGreaterThanSignKeyword_1_5() { return cEqualsSignGreaterThanSignKeyword_1_5; }

		//state=[State]
		public Assignment getStateAssignment_1_6() { return cStateAssignment_1_6; }

		//[State]
		public CrossReference getStateStateCrossReference_1_6_0() { return cStateStateCrossReference_1_6_0; }

		//ID
		public RuleCall getStateStateIDTerminalRuleCall_1_6_0_1() { return cStateStateIDTerminalRuleCall_1_6_0_1; }
	}
	
	
	private final KanbanSchedulingSystemElements pKanbanSchedulingSystem;
	private final TeamElements pTeam;
	private final ServiceElements pService;
	private final AssetElements pAsset;
	private final SkillElements pSkill;
	private final DependencyElements pDependency;
	private final RequirementElements pRequirement;
	private final TaskElements pTask;
	private final KanbanTaskModelElements pKanbanTaskModel;
	private final CapabilityElements pCapability;
	private final KanbanGovModelElements pKanbanGovModel;
	private final StrategyElements pStrategy;
	private final EntityElements pEntity;
	private final ProvisionElements pProvision;
	private final StatemachineElements pStatemachine;
	private final EventElements pEvent;
	private final CommandElements pCommand;
	private final StateElements pState;
	private final TransitionElements pTransition;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public KanbanmodelGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pKanbanSchedulingSystem = new KanbanSchedulingSystemElements();
		this.pTeam = new TeamElements();
		this.pService = new ServiceElements();
		this.pAsset = new AssetElements();
		this.pSkill = new SkillElements();
		this.pDependency = new DependencyElements();
		this.pRequirement = new RequirementElements();
		this.pTask = new TaskElements();
		this.pKanbanTaskModel = new KanbanTaskModelElements();
		this.pCapability = new CapabilityElements();
		this.pKanbanGovModel = new KanbanGovModelElements();
		this.pStrategy = new StrategyElements();
		this.pEntity = new EntityElements();
		this.pProvision = new ProvisionElements();
		this.pStatemachine = new StatemachineElements();
		this.pEvent = new EventElements();
		this.pCommand = new CommandElements();
		this.pState = new StateElements();
		this.pTransition = new TransitionElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("ausim.xtext.kanban.domainmodel.Kanbanmodel".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//KanbanSchedulingSystem:
	//	"KSSModel" name=ID "OrganizationModel" orgUnits+=Team+ "end OrganizationModel" "WorkFlowModel" kssTasks+=Task+
	//	kssWorkFlow=KanbanTaskModel "end WorkFlowModel" "GovernanceModel" kssGovModel=KanbanGovModel "end GovernanceModel"
	//	"end KSSModel";
	public KanbanSchedulingSystemElements getKanbanSchedulingSystemAccess() {
		return pKanbanSchedulingSystem;
	}
	
	public ParserRule getKanbanSchedulingSystemRule() {
		return getKanbanSchedulingSystemAccess().getRule();
	}

	//Team:
	//	("team" | "group") name=ID "{" ("sourceUnits" "{" demandUnits+=[Team]+ "}")? ("targetUnits" "{" sourcedUnits+=[Team]+
	//	"}")? ("contains" "{" groupmembers+=[Team]+ "}")? ("resources" "{" resources+=Asset+ "}")? ("services" "{"
	//	services+=Service+ "}")? "}";
	public TeamElements getTeamAccess() {
		return pTeam;
	}
	
	public ParserRule getTeamRule() {
		return getTeamAccess().getRule();
	}

	//Service:
	//	"service" name=ID;
	public ServiceElements getServiceAccess() {
		return pService;
	}
	
	public ParserRule getServiceRule() {
		return getServiceAccess().getRule();
	}

	//Asset:
	//	"resource" name=ID ("{" "skills" "{" hasSkills+=Skill+ "}" "}")?;
	public AssetElements getAssetAccess() {
		return pAsset;
	}
	
	public ParserRule getAssetRule() {
		return getAssetAccess().getRule();
	}

	//Skill:
	//	name=ID;
	public SkillElements getSkillAccess() {
		return pSkill;
	}
	
	public ParserRule getSkillRule() {
		return getSkillAccess().getRule();
	}

	//Dependency:
	//	sourceTask=[Task] ("=>" | "->") targetTask=[Task];
	public DependencyElements getDependencyAccess() {
		return pDependency;
	}
	
	public ParserRule getDependencyRule() {
		return getDependencyAccess().getRule();
	}

	//Requirement:
	//	"requirement" name=ID "{" ("workItems" "{" rTasks+=[Task]+ "}") ("workItemNetwork" dependencies+=Dependency*)? "}";
	public RequirementElements getRequirementAccess() {
		return pRequirement;
	}
	
	public ParserRule getRequirementRule() {
		return getRequirementAccess().getRule();
	}

	//Task:
	//	"workItem" name=ID "{" ("subtasks" "{" sTasks+=[Task]+ "}")? ("taskDependencies" taskDependencies+=Dependency*)?
	//	("servicesRequired" reqSpecialties+=[Service]+)? ("base value" bvalue=INT)? ("classOfService" COS=ID)? "}";
	public TaskElements getTaskAccess() {
		return pTask;
	}
	
	public ParserRule getTaskRule() {
		return getTaskAccess().getRule();
	}

	//KanbanTaskModel:
	//	"WorkFlow" name=ID caps+=Capability+ "end WorkFlow";
	public KanbanTaskModelElements getKanbanTaskModelAccess() {
		return pKanbanTaskModel;
	}
	
	public ParserRule getKanbanTaskModelRule() {
		return getKanbanTaskModelAccess().getRule();
	}

	//Capability:
	//	"capability" name=ID "{" reqs+=Requirement+ "}";
	public CapabilityElements getCapabilityAccess() {
		return pCapability;
	}
	
	public ParserRule getCapabilityRule() {
		return getCapabilityAccess().getRule();
	}

	//KanbanGovModel:
	//	strategy+=Strategy;
	public KanbanGovModelElements getKanbanGovModelAccess() {
		return pKanbanGovModel;
	}
	
	public ParserRule getKanbanGovModelRule() {
		return getKanbanGovModelAccess().getRule();
	}

	//Strategy:
	//	"strategy" name=ID "{" entities+=Entity* "}";
	public StrategyElements getStrategyAccess() {
		return pStrategy;
	}
	
	public ParserRule getStrategyRule() {
		return getStrategyAccess().getRule();
	}

	//Entity:
	//	"entity" name=ID "{" ("ServiceDirectory" sdname=ID "=" "[" serviceProvisions+=Provision* "]")?
	//	entityBehavior=Statemachine "}";
	public EntityElements getEntityAccess() {
		return pEntity;
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}

	//Provision:
	//	"(" serviceName=[Service] "," "{" providers+=[Team]* "}" ")";
	public ProvisionElements getProvisionAccess() {
		return pProvision;
	}
	
	public ParserRule getProvisionRule() {
		return getProvisionAccess().getRule();
	}

	//Statemachine:
	//	{Statemachine} ("events" events+=Event+ "end")? ("activities" commands+=Command+ "end")? states+=State*;
	public StatemachineElements getStatemachineAccess() {
		return pStatemachine;
	}
	
	public ParserRule getStatemachineRule() {
		return getStatemachineAccess().getRule();
	}

	//Event:
	//	name=ID code=ID;
	public EventElements getEventAccess() {
		return pEvent;
	}
	
	public ParserRule getEventRule() {
		return getEventAccess().getRule();
	}

	//Command:
	//	name=ID code=ID;
	public CommandElements getCommandAccess() {
		return pCommand;
	}
	
	public ParserRule getCommandRule() {
		return getCommandAccess().getRule();
	}

	//State:
	//	"state" name=ID ("actions" "{" actions+=[Command]+ "}")? transitions+=Transition* "end";
	public StateElements getStateAccess() {
		return pState;
	}
	
	public ParserRule getStateRule() {
		return getStateAccess().getRule();
	}

	//Transition:
	//	event=[Event] "=>" state=[State] | event=[Event] "/" "[" eventactions+=[Command]+ "]" "=>" state=[State];
	public TransitionElements getTransitionAccess() {
		return pTransition;
	}
	
	public ParserRule getTransitionRule() {
		return getTransitionAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
